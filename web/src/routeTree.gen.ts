/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as authResetPasswordIndexRouteImport } from './routes/(auth)/reset-password/index'
import { Route as authAcceptInviteIndexRouteImport } from './routes/(auth)/accept-invite/index'
import { Route as appResponsesIndexRouteImport } from './routes/(app)/responses/index'
import { Route as appObserversIndexRouteImport } from './routes/(app)/observers/index'
import { Route as appNgosIndexRouteImport } from './routes/(app)/ngos/index'
import { Route as appMonitoringObserversIndexRouteImport } from './routes/(app)/monitoring-observers/index'
import { Route as appFormTemplatesIndexRouteImport } from './routes/(app)/form-templates/index'
import { Route as appElectionRoundsIndexRouteImport } from './routes/(app)/election-rounds/index'
import { Route as appElectionEventIndexRouteImport } from './routes/(app)/election-event/index'
import { Route as authResetPasswordSuccessRouteImport } from './routes/(auth)/reset-password/success'
import { Route as authAcceptInviteSuccessRouteImport } from './routes/(auth)/accept-invite/success'
import { Route as appObserversObserverIdRouteImport } from './routes/(app)/observers/$observerId'
import { Route as appObserverGuidesNewRouteImport } from './routes/(app)/observer-guides/new'
import { Route as appMonitoringObserversImportRouteImport } from './routes/(app)/monitoring-observers/import'
import { Route as appMonitoringObserversCreateNewMessageRouteImport } from './routes/(app)/monitoring-observers/create-new-message'
import { Route as appMonitoringObserversTabRouteImport } from './routes/(app)/monitoring-observers/$tab'
import { Route as appFormsNewRouteImport } from './routes/(app)/forms/new'
import { Route as appFormsFormIdRouteImport } from './routes/(app)/forms/$formId'
import { Route as appFormTemplatesNewRouteImport } from './routes/(app)/form-templates/new'
import { Route as appFormTemplatesFormTemplateIdRouteImport } from './routes/(app)/form-templates/$formTemplateId'
import { Route as appElectionEventTabRouteImport } from './routes/(app)/election-event/$tab'
import { Route as appCitizenNotificationsNewRouteImport } from './routes/(app)/citizen-notifications/new'
import { Route as appCitizenGuidesNewRouteImport } from './routes/(app)/citizen-guides/new'
import { Route as appElectionRoundsElectionRoundIdIndexRouteImport } from './routes/(app)/election-rounds/$electionRoundId/index'
import { Route as appResponsesQuickReportsQuickReportIdRouteImport } from './routes/(app)/responses/quick-reports/$quickReportId'
import { Route as appResponsesIncidentReportsIncidentReportIdRouteImport } from './routes/(app)/responses/incident-reports/$incidentReportId'
import { Route as appResponsesFormSubmissionsSubmissionIdRouteImport } from './routes/(app)/responses/form-submissions/$submissionId'
import { Route as appResponsesCitizenReportsCitizenReportIdRouteImport } from './routes/(app)/responses/citizen-reports/$citizenReportId'
import { Route as appObserversObserverIdEditRouteImport } from './routes/(app)/observers/$observerId.edit'
import { Route as appObserverGuidesViewGuideIdRouteImport } from './routes/(app)/observer-guides/view.$guideId'
import { Route as appObserverGuidesEditGuideIdRouteImport } from './routes/(app)/observer-guides/edit.$guideId'
import { Route as appMonitoringObserversPushMessagesIdRouteImport } from './routes/(app)/monitoring-observers/push-messages.$id'
import { Route as appMonitoringObserversEditMonitoringObserverIdRouteImport } from './routes/(app)/monitoring-observers/edit.$monitoringObserverId'
import { Route as appFormsNewTemplateRouteImport } from './routes/(app)/forms/new_.template'
import { Route as appFormsNewScratchRouteImport } from './routes/(app)/forms/new_.scratch'
import { Route as appFormsNewReuseRouteImport } from './routes/(app)/forms/new_.reuse'
import { Route as appFormsFormIdEditRouteImport } from './routes/(app)/forms/$formId_.edit'
import { Route as appFormsFormIdLanguageCodeRouteImport } from './routes/(app)/forms/$formId_.$languageCode'
import { Route as appFormTemplatesFormTemplateIdEditRouteImport } from './routes/(app)/form-templates/$formTemplateId_.edit'
import { Route as appFormTemplatesFormTemplateIdLanguageCodeRouteImport } from './routes/(app)/form-templates/$formTemplateId_.$languageCode'
import { Route as appElectionRoundsElectionRoundIdEditRouteImport } from './routes/(app)/election-rounds/$electionRoundId/edit'
import { Route as appElectionRoundsElectionRoundIdTabRouteImport } from './routes/(app)/election-rounds/$electionRoundId/$tab'
import { Route as appCitizenNotificationsViewNotificationIdRouteImport } from './routes/(app)/citizen-notifications/view.$notificationId'
import { Route as appCitizenGuidesViewGuideIdRouteImport } from './routes/(app)/citizen-guides/view.$guideId'
import { Route as appCitizenGuidesEditGuideIdRouteImport } from './routes/(app)/citizen-guides/edit.$guideId'
import { Route as appResponsesIncidentReportsFormIdAggregatedRouteImport } from './routes/(app)/responses/incident-reports/$formId.aggregated'
import { Route as appResponsesFormSubmissionsFormIdAggregatedRouteImport } from './routes/(app)/responses/form-submissions/$formId.aggregated'
import { Route as appResponsesCitizenReportsFormIdAggregatedRouteImport } from './routes/(app)/responses/citizen-reports/$formId.aggregated'
import { Route as appNgosViewNgoIdTabRouteImport } from './routes/(app)/ngos/view.$ngoId.$tab'
import { Route as appMonitoringObserversViewMonitoringObserverIdTabRouteImport } from './routes/(app)/monitoring-observers/view/$monitoringObserverId.$tab'
import { Route as appMonitoringObserversPushMessagesIdViewRouteImport } from './routes/(app)/monitoring-observers/push-messages.$id_.view'
import { Route as appFormsFormIdEditTranslationLanguageCodeRouteImport } from './routes/(app)/forms/$formId_.edit-translation.$languageCode'
import { Route as appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRouteImport } from './routes/(app)/form-templates/$formTemplateId_.edit-translation.$languageCode'
import { Route as appElectionRoundsElectionRoundIdPollingStationsImportRouteImport } from './routes/(app)/election-rounds/$electionRoundId/polling-stations/import'
import { Route as appElectionRoundsElectionRoundIdLocationsImportRouteImport } from './routes/(app)/election-rounds/$electionRoundId/locations/import'
import { Route as appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRouteImport } from './routes/(app)/citizen-report-attachments/$electionRoundId.$citizenReportId.$attachmentId'
import { Route as appNgosEditNgoIdRouteImport } from './routes/(app)/ngos/edit.$ngoId.'
import { Route as appNgosAdminNgoIdAdminIdViewRouteImport } from './routes/(app)/ngos/admin/$ngoId.$adminId.view'
import { Route as appNgosAdminNgoIdAdminIdEditRouteImport } from './routes/(app)/ngos/admin/$ngoId.$adminId.edit'

const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authResetPasswordIndexRoute = authResetPasswordIndexRouteImport.update({
  id: '/(auth)/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => rootRouteImport,
} as any)
const authAcceptInviteIndexRoute = authAcceptInviteIndexRouteImport.update({
  id: '/(auth)/accept-invite/',
  path: '/accept-invite/',
  getParentRoute: () => rootRouteImport,
} as any)
const appResponsesIndexRoute = appResponsesIndexRouteImport.update({
  id: '/responses/',
  path: '/responses/',
  getParentRoute: () => appRouteRoute,
} as any)
const appObserversIndexRoute = appObserversIndexRouteImport.update({
  id: '/observers/',
  path: '/observers/',
  getParentRoute: () => appRouteRoute,
} as any)
const appNgosIndexRoute = appNgosIndexRouteImport.update({
  id: '/ngos/',
  path: '/ngos/',
  getParentRoute: () => appRouteRoute,
} as any)
const appMonitoringObserversIndexRoute =
  appMonitoringObserversIndexRouteImport.update({
    id: '/monitoring-observers/',
    path: '/monitoring-observers/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appFormTemplatesIndexRoute = appFormTemplatesIndexRouteImport.update({
  id: '/form-templates/',
  path: '/form-templates/',
  getParentRoute: () => appRouteRoute,
} as any)
const appElectionRoundsIndexRoute = appElectionRoundsIndexRouteImport.update({
  id: '/election-rounds/',
  path: '/election-rounds/',
  getParentRoute: () => appRouteRoute,
} as any)
const appElectionEventIndexRoute = appElectionEventIndexRouteImport.update({
  id: '/election-event/',
  path: '/election-event/',
  getParentRoute: () => appRouteRoute,
} as any)
const authResetPasswordSuccessRoute =
  authResetPasswordSuccessRouteImport.update({
    id: '/(auth)/reset-password/success',
    path: '/reset-password/success',
    getParentRoute: () => rootRouteImport,
  } as any)
const authAcceptInviteSuccessRoute = authAcceptInviteSuccessRouteImport.update({
  id: '/(auth)/accept-invite/success',
  path: '/accept-invite/success',
  getParentRoute: () => rootRouteImport,
} as any)
const appObserversObserverIdRoute = appObserversObserverIdRouteImport.update({
  id: '/observers/$observerId',
  path: '/observers/$observerId',
  getParentRoute: () => appRouteRoute,
} as any)
const appObserverGuidesNewRoute = appObserverGuidesNewRouteImport.update({
  id: '/observer-guides/new',
  path: '/observer-guides/new',
  getParentRoute: () => appRouteRoute,
} as any)
const appMonitoringObserversImportRoute =
  appMonitoringObserversImportRouteImport.update({
    id: '/monitoring-observers/import',
    path: '/monitoring-observers/import',
    getParentRoute: () => appRouteRoute,
  } as any)
const appMonitoringObserversCreateNewMessageRoute =
  appMonitoringObserversCreateNewMessageRouteImport.update({
    id: '/monitoring-observers/create-new-message',
    path: '/monitoring-observers/create-new-message',
    getParentRoute: () => appRouteRoute,
  } as any)
const appMonitoringObserversTabRoute =
  appMonitoringObserversTabRouteImport.update({
    id: '/monitoring-observers/$tab',
    path: '/monitoring-observers/$tab',
    getParentRoute: () => appRouteRoute,
  } as any)
const appFormsNewRoute = appFormsNewRouteImport.update({
  id: '/forms/new',
  path: '/forms/new',
  getParentRoute: () => appRouteRoute,
} as any)
const appFormsFormIdRoute = appFormsFormIdRouteImport.update({
  id: '/forms/$formId',
  path: '/forms/$formId',
  getParentRoute: () => appRouteRoute,
} as any)
const appFormTemplatesNewRoute = appFormTemplatesNewRouteImport.update({
  id: '/form-templates/new',
  path: '/form-templates/new',
  getParentRoute: () => appRouteRoute,
} as any)
const appFormTemplatesFormTemplateIdRoute =
  appFormTemplatesFormTemplateIdRouteImport.update({
    id: '/form-templates/$formTemplateId',
    path: '/form-templates/$formTemplateId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appElectionEventTabRoute = appElectionEventTabRouteImport.update({
  id: '/election-event/$tab',
  path: '/election-event/$tab',
  getParentRoute: () => appRouteRoute,
} as any)
const appCitizenNotificationsNewRoute =
  appCitizenNotificationsNewRouteImport.update({
    id: '/citizen-notifications/new',
    path: '/citizen-notifications/new',
    getParentRoute: () => appRouteRoute,
  } as any)
const appCitizenGuidesNewRoute = appCitizenGuidesNewRouteImport.update({
  id: '/citizen-guides/new',
  path: '/citizen-guides/new',
  getParentRoute: () => appRouteRoute,
} as any)
const appElectionRoundsElectionRoundIdIndexRoute =
  appElectionRoundsElectionRoundIdIndexRouteImport.update({
    id: '/election-rounds/$electionRoundId/',
    path: '/election-rounds/$electionRoundId/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appResponsesQuickReportsQuickReportIdRoute =
  appResponsesQuickReportsQuickReportIdRouteImport.update({
    id: '/responses/quick-reports/$quickReportId',
    path: '/responses/quick-reports/$quickReportId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appResponsesIncidentReportsIncidentReportIdRoute =
  appResponsesIncidentReportsIncidentReportIdRouteImport.update({
    id: '/responses/incident-reports/$incidentReportId',
    path: '/responses/incident-reports/$incidentReportId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appResponsesFormSubmissionsSubmissionIdRoute =
  appResponsesFormSubmissionsSubmissionIdRouteImport.update({
    id: '/responses/form-submissions/$submissionId',
    path: '/responses/form-submissions/$submissionId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appResponsesCitizenReportsCitizenReportIdRoute =
  appResponsesCitizenReportsCitizenReportIdRouteImport.update({
    id: '/responses/citizen-reports/$citizenReportId',
    path: '/responses/citizen-reports/$citizenReportId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appObserversObserverIdEditRoute =
  appObserversObserverIdEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => appObserversObserverIdRoute,
  } as any)
const appObserverGuidesViewGuideIdRoute =
  appObserverGuidesViewGuideIdRouteImport.update({
    id: '/observer-guides/view/$guideId',
    path: '/observer-guides/view/$guideId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appObserverGuidesEditGuideIdRoute =
  appObserverGuidesEditGuideIdRouteImport.update({
    id: '/observer-guides/edit/$guideId',
    path: '/observer-guides/edit/$guideId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appMonitoringObserversPushMessagesIdRoute =
  appMonitoringObserversPushMessagesIdRouteImport.update({
    id: '/monitoring-observers/push-messages/$id',
    path: '/monitoring-observers/push-messages/$id',
    getParentRoute: () => appRouteRoute,
  } as any)
const appMonitoringObserversEditMonitoringObserverIdRoute =
  appMonitoringObserversEditMonitoringObserverIdRouteImport.update({
    id: '/monitoring-observers/edit/$monitoringObserverId',
    path: '/monitoring-observers/edit/$monitoringObserverId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appFormsNewTemplateRoute = appFormsNewTemplateRouteImport.update({
  id: '/forms/new_/template',
  path: '/forms/new/template',
  getParentRoute: () => appRouteRoute,
} as any)
const appFormsNewScratchRoute = appFormsNewScratchRouteImport.update({
  id: '/forms/new_/scratch',
  path: '/forms/new/scratch',
  getParentRoute: () => appRouteRoute,
} as any)
const appFormsNewReuseRoute = appFormsNewReuseRouteImport.update({
  id: '/forms/new_/reuse',
  path: '/forms/new/reuse',
  getParentRoute: () => appRouteRoute,
} as any)
const appFormsFormIdEditRoute = appFormsFormIdEditRouteImport.update({
  id: '/forms/$formId_/edit',
  path: '/forms/$formId/edit',
  getParentRoute: () => appRouteRoute,
} as any)
const appFormsFormIdLanguageCodeRoute =
  appFormsFormIdLanguageCodeRouteImport.update({
    id: '/forms/$formId_/$languageCode',
    path: '/forms/$formId/$languageCode',
    getParentRoute: () => appRouteRoute,
  } as any)
const appFormTemplatesFormTemplateIdEditRoute =
  appFormTemplatesFormTemplateIdEditRouteImport.update({
    id: '/form-templates/$formTemplateId_/edit',
    path: '/form-templates/$formTemplateId/edit',
    getParentRoute: () => appRouteRoute,
  } as any)
const appFormTemplatesFormTemplateIdLanguageCodeRoute =
  appFormTemplatesFormTemplateIdLanguageCodeRouteImport.update({
    id: '/form-templates/$formTemplateId_/$languageCode',
    path: '/form-templates/$formTemplateId/$languageCode',
    getParentRoute: () => appRouteRoute,
  } as any)
const appElectionRoundsElectionRoundIdEditRoute =
  appElectionRoundsElectionRoundIdEditRouteImport.update({
    id: '/election-rounds/$electionRoundId/edit',
    path: '/election-rounds/$electionRoundId/edit',
    getParentRoute: () => appRouteRoute,
  } as any)
const appElectionRoundsElectionRoundIdTabRoute =
  appElectionRoundsElectionRoundIdTabRouteImport.update({
    id: '/election-rounds/$electionRoundId/$tab',
    path: '/election-rounds/$electionRoundId/$tab',
    getParentRoute: () => appRouteRoute,
  } as any)
const appCitizenNotificationsViewNotificationIdRoute =
  appCitizenNotificationsViewNotificationIdRouteImport.update({
    id: '/citizen-notifications/view/$notificationId',
    path: '/citizen-notifications/view/$notificationId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appCitizenGuidesViewGuideIdRoute =
  appCitizenGuidesViewGuideIdRouteImport.update({
    id: '/citizen-guides/view/$guideId',
    path: '/citizen-guides/view/$guideId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appCitizenGuidesEditGuideIdRoute =
  appCitizenGuidesEditGuideIdRouteImport.update({
    id: '/citizen-guides/edit/$guideId',
    path: '/citizen-guides/edit/$guideId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appResponsesIncidentReportsFormIdAggregatedRoute =
  appResponsesIncidentReportsFormIdAggregatedRouteImport.update({
    id: '/responses/incident-reports/$formId/aggregated',
    path: '/responses/incident-reports/$formId/aggregated',
    getParentRoute: () => appRouteRoute,
  } as any)
const appResponsesFormSubmissionsFormIdAggregatedRoute =
  appResponsesFormSubmissionsFormIdAggregatedRouteImport.update({
    id: '/responses/form-submissions/$formId/aggregated',
    path: '/responses/form-submissions/$formId/aggregated',
    getParentRoute: () => appRouteRoute,
  } as any)
const appResponsesCitizenReportsFormIdAggregatedRoute =
  appResponsesCitizenReportsFormIdAggregatedRouteImport.update({
    id: '/responses/citizen-reports/$formId/aggregated',
    path: '/responses/citizen-reports/$formId/aggregated',
    getParentRoute: () => appRouteRoute,
  } as any)
const appNgosViewNgoIdTabRoute = appNgosViewNgoIdTabRouteImport.update({
  id: '/ngos/view/$ngoId/$tab',
  path: '/ngos/view/$ngoId/$tab',
  getParentRoute: () => appRouteRoute,
} as any)
const appMonitoringObserversViewMonitoringObserverIdTabRoute =
  appMonitoringObserversViewMonitoringObserverIdTabRouteImport.update({
    id: '/monitoring-observers/view/$monitoringObserverId/$tab',
    path: '/monitoring-observers/view/$monitoringObserverId/$tab',
    getParentRoute: () => appRouteRoute,
  } as any)
const appMonitoringObserversPushMessagesIdViewRoute =
  appMonitoringObserversPushMessagesIdViewRouteImport.update({
    id: '/monitoring-observers/push-messages/$id_/view',
    path: '/monitoring-observers/push-messages/$id/view',
    getParentRoute: () => appRouteRoute,
  } as any)
const appFormsFormIdEditTranslationLanguageCodeRoute =
  appFormsFormIdEditTranslationLanguageCodeRouteImport.update({
    id: '/forms/$formId_/edit-translation/$languageCode',
    path: '/forms/$formId/edit-translation/$languageCode',
    getParentRoute: () => appRouteRoute,
  } as any)
const appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute =
  appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRouteImport.update({
    id: '/form-templates/$formTemplateId_/edit-translation/$languageCode',
    path: '/form-templates/$formTemplateId/edit-translation/$languageCode',
    getParentRoute: () => appRouteRoute,
  } as any)
const appElectionRoundsElectionRoundIdPollingStationsImportRoute =
  appElectionRoundsElectionRoundIdPollingStationsImportRouteImport.update({
    id: '/election-rounds/$electionRoundId/polling-stations/import',
    path: '/election-rounds/$electionRoundId/polling-stations/import',
    getParentRoute: () => appRouteRoute,
  } as any)
const appElectionRoundsElectionRoundIdLocationsImportRoute =
  appElectionRoundsElectionRoundIdLocationsImportRouteImport.update({
    id: '/election-rounds/$electionRoundId/locations/import',
    path: '/election-rounds/$electionRoundId/locations/import',
    getParentRoute: () => appRouteRoute,
  } as any)
const appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute =
  appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRouteImport.update(
    {
      id: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId',
      path: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId',
      getParentRoute: () => appRouteRoute,
    } as any,
  )
const appNgosEditNgoIdRoute = appNgosEditNgoIdRouteImport.update({
  id: '/ngos/edit/$ngoId/',
  path: '/ngos/edit/$ngoId/',
  getParentRoute: () => appRouteRoute,
} as any)
const appNgosAdminNgoIdAdminIdViewRoute =
  appNgosAdminNgoIdAdminIdViewRouteImport.update({
    id: '/ngos/admin/$ngoId/$adminId/view',
    path: '/ngos/admin/$ngoId/$adminId/view',
    getParentRoute: () => appRouteRoute,
  } as any)
const appNgosAdminNgoIdAdminIdEditRoute =
  appNgosAdminNgoIdAdminIdEditRouteImport.update({
    id: '/ngos/admin/$ngoId/$adminId/edit',
    path: '/ngos/admin/$ngoId/$adminId/edit',
    getParentRoute: () => appRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/citizen-guides/new': typeof appCitizenGuidesNewRoute
  '/citizen-notifications/new': typeof appCitizenNotificationsNewRoute
  '/election-event/$tab': typeof appElectionEventTabRoute
  '/form-templates/$formTemplateId': typeof appFormTemplatesFormTemplateIdRoute
  '/form-templates/new': typeof appFormTemplatesNewRoute
  '/forms/$formId': typeof appFormsFormIdRoute
  '/forms/new': typeof appFormsNewRoute
  '/monitoring-observers/$tab': typeof appMonitoringObserversTabRoute
  '/monitoring-observers/create-new-message': typeof appMonitoringObserversCreateNewMessageRoute
  '/monitoring-observers/import': typeof appMonitoringObserversImportRoute
  '/observer-guides/new': typeof appObserverGuidesNewRoute
  '/observers/$observerId': typeof appObserversObserverIdRouteWithChildren
  '/accept-invite/success': typeof authAcceptInviteSuccessRoute
  '/reset-password/success': typeof authResetPasswordSuccessRoute
  '/election-event': typeof appElectionEventIndexRoute
  '/election-rounds': typeof appElectionRoundsIndexRoute
  '/form-templates': typeof appFormTemplatesIndexRoute
  '/monitoring-observers': typeof appMonitoringObserversIndexRoute
  '/ngos': typeof appNgosIndexRoute
  '/observers': typeof appObserversIndexRoute
  '/responses': typeof appResponsesIndexRoute
  '/accept-invite': typeof authAcceptInviteIndexRoute
  '/reset-password': typeof authResetPasswordIndexRoute
  '/citizen-guides/edit/$guideId': typeof appCitizenGuidesEditGuideIdRoute
  '/citizen-guides/view/$guideId': typeof appCitizenGuidesViewGuideIdRoute
  '/citizen-notifications/view/$notificationId': typeof appCitizenNotificationsViewNotificationIdRoute
  '/election-rounds/$electionRoundId/$tab': typeof appElectionRoundsElectionRoundIdTabRoute
  '/election-rounds/$electionRoundId/edit': typeof appElectionRoundsElectionRoundIdEditRoute
  '/form-templates/$formTemplateId/$languageCode': typeof appFormTemplatesFormTemplateIdLanguageCodeRoute
  '/form-templates/$formTemplateId/edit': typeof appFormTemplatesFormTemplateIdEditRoute
  '/forms/$formId/$languageCode': typeof appFormsFormIdLanguageCodeRoute
  '/forms/$formId/edit': typeof appFormsFormIdEditRoute
  '/forms/new/reuse': typeof appFormsNewReuseRoute
  '/forms/new/scratch': typeof appFormsNewScratchRoute
  '/forms/new/template': typeof appFormsNewTemplateRoute
  '/monitoring-observers/edit/$monitoringObserverId': typeof appMonitoringObserversEditMonitoringObserverIdRoute
  '/monitoring-observers/push-messages/$id': typeof appMonitoringObserversPushMessagesIdRoute
  '/observer-guides/edit/$guideId': typeof appObserverGuidesEditGuideIdRoute
  '/observer-guides/view/$guideId': typeof appObserverGuidesViewGuideIdRoute
  '/observers/$observerId/edit': typeof appObserversObserverIdEditRoute
  '/responses/citizen-reports/$citizenReportId': typeof appResponsesCitizenReportsCitizenReportIdRoute
  '/responses/form-submissions/$submissionId': typeof appResponsesFormSubmissionsSubmissionIdRoute
  '/responses/incident-reports/$incidentReportId': typeof appResponsesIncidentReportsIncidentReportIdRoute
  '/responses/quick-reports/$quickReportId': typeof appResponsesQuickReportsQuickReportIdRoute
  '/election-rounds/$electionRoundId': typeof appElectionRoundsElectionRoundIdIndexRoute
  '/ngos/edit/$ngoId': typeof appNgosEditNgoIdRoute
  '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': typeof appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  '/election-rounds/$electionRoundId/locations/import': typeof appElectionRoundsElectionRoundIdLocationsImportRoute
  '/election-rounds/$electionRoundId/polling-stations/import': typeof appElectionRoundsElectionRoundIdPollingStationsImportRoute
  '/form-templates/$formTemplateId/edit-translation/$languageCode': typeof appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  '/forms/$formId/edit-translation/$languageCode': typeof appFormsFormIdEditTranslationLanguageCodeRoute
  '/monitoring-observers/push-messages/$id/view': typeof appMonitoringObserversPushMessagesIdViewRoute
  '/monitoring-observers/view/$monitoringObserverId/$tab': typeof appMonitoringObserversViewMonitoringObserverIdTabRoute
  '/ngos/view/$ngoId/$tab': typeof appNgosViewNgoIdTabRoute
  '/responses/citizen-reports/$formId/aggregated': typeof appResponsesCitizenReportsFormIdAggregatedRoute
  '/responses/form-submissions/$formId/aggregated': typeof appResponsesFormSubmissionsFormIdAggregatedRoute
  '/responses/incident-reports/$formId/aggregated': typeof appResponsesIncidentReportsFormIdAggregatedRoute
  '/ngos/admin/$ngoId/$adminId/edit': typeof appNgosAdminNgoIdAdminIdEditRoute
  '/ngos/admin/$ngoId/$adminId/view': typeof appNgosAdminNgoIdAdminIdViewRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/': typeof appIndexRoute
  '/citizen-guides/new': typeof appCitizenGuidesNewRoute
  '/citizen-notifications/new': typeof appCitizenNotificationsNewRoute
  '/election-event/$tab': typeof appElectionEventTabRoute
  '/form-templates/$formTemplateId': typeof appFormTemplatesFormTemplateIdRoute
  '/form-templates/new': typeof appFormTemplatesNewRoute
  '/forms/$formId': typeof appFormsFormIdRoute
  '/forms/new': typeof appFormsNewRoute
  '/monitoring-observers/$tab': typeof appMonitoringObserversTabRoute
  '/monitoring-observers/create-new-message': typeof appMonitoringObserversCreateNewMessageRoute
  '/monitoring-observers/import': typeof appMonitoringObserversImportRoute
  '/observer-guides/new': typeof appObserverGuidesNewRoute
  '/observers/$observerId': typeof appObserversObserverIdRouteWithChildren
  '/accept-invite/success': typeof authAcceptInviteSuccessRoute
  '/reset-password/success': typeof authResetPasswordSuccessRoute
  '/election-event': typeof appElectionEventIndexRoute
  '/election-rounds': typeof appElectionRoundsIndexRoute
  '/form-templates': typeof appFormTemplatesIndexRoute
  '/monitoring-observers': typeof appMonitoringObserversIndexRoute
  '/ngos': typeof appNgosIndexRoute
  '/observers': typeof appObserversIndexRoute
  '/responses': typeof appResponsesIndexRoute
  '/accept-invite': typeof authAcceptInviteIndexRoute
  '/reset-password': typeof authResetPasswordIndexRoute
  '/citizen-guides/edit/$guideId': typeof appCitizenGuidesEditGuideIdRoute
  '/citizen-guides/view/$guideId': typeof appCitizenGuidesViewGuideIdRoute
  '/citizen-notifications/view/$notificationId': typeof appCitizenNotificationsViewNotificationIdRoute
  '/election-rounds/$electionRoundId/$tab': typeof appElectionRoundsElectionRoundIdTabRoute
  '/election-rounds/$electionRoundId/edit': typeof appElectionRoundsElectionRoundIdEditRoute
  '/form-templates/$formTemplateId/$languageCode': typeof appFormTemplatesFormTemplateIdLanguageCodeRoute
  '/form-templates/$formTemplateId/edit': typeof appFormTemplatesFormTemplateIdEditRoute
  '/forms/$formId/$languageCode': typeof appFormsFormIdLanguageCodeRoute
  '/forms/$formId/edit': typeof appFormsFormIdEditRoute
  '/forms/new/reuse': typeof appFormsNewReuseRoute
  '/forms/new/scratch': typeof appFormsNewScratchRoute
  '/forms/new/template': typeof appFormsNewTemplateRoute
  '/monitoring-observers/edit/$monitoringObserverId': typeof appMonitoringObserversEditMonitoringObserverIdRoute
  '/monitoring-observers/push-messages/$id': typeof appMonitoringObserversPushMessagesIdRoute
  '/observer-guides/edit/$guideId': typeof appObserverGuidesEditGuideIdRoute
  '/observer-guides/view/$guideId': typeof appObserverGuidesViewGuideIdRoute
  '/observers/$observerId/edit': typeof appObserversObserverIdEditRoute
  '/responses/citizen-reports/$citizenReportId': typeof appResponsesCitizenReportsCitizenReportIdRoute
  '/responses/form-submissions/$submissionId': typeof appResponsesFormSubmissionsSubmissionIdRoute
  '/responses/incident-reports/$incidentReportId': typeof appResponsesIncidentReportsIncidentReportIdRoute
  '/responses/quick-reports/$quickReportId': typeof appResponsesQuickReportsQuickReportIdRoute
  '/election-rounds/$electionRoundId': typeof appElectionRoundsElectionRoundIdIndexRoute
  '/ngos/edit/$ngoId': typeof appNgosEditNgoIdRoute
  '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': typeof appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  '/election-rounds/$electionRoundId/locations/import': typeof appElectionRoundsElectionRoundIdLocationsImportRoute
  '/election-rounds/$electionRoundId/polling-stations/import': typeof appElectionRoundsElectionRoundIdPollingStationsImportRoute
  '/form-templates/$formTemplateId/edit-translation/$languageCode': typeof appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  '/forms/$formId/edit-translation/$languageCode': typeof appFormsFormIdEditTranslationLanguageCodeRoute
  '/monitoring-observers/push-messages/$id/view': typeof appMonitoringObserversPushMessagesIdViewRoute
  '/monitoring-observers/view/$monitoringObserverId/$tab': typeof appMonitoringObserversViewMonitoringObserverIdTabRoute
  '/ngos/view/$ngoId/$tab': typeof appNgosViewNgoIdTabRoute
  '/responses/citizen-reports/$formId/aggregated': typeof appResponsesCitizenReportsFormIdAggregatedRoute
  '/responses/form-submissions/$formId/aggregated': typeof appResponsesFormSubmissionsFormIdAggregatedRoute
  '/responses/incident-reports/$formId/aggregated': typeof appResponsesIncidentReportsFormIdAggregatedRoute
  '/ngos/admin/$ngoId/$adminId/edit': typeof appNgosAdminNgoIdAdminIdEditRoute
  '/ngos/admin/$ngoId/$adminId/view': typeof appNgosAdminNgoIdAdminIdViewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/citizen-guides/new': typeof appCitizenGuidesNewRoute
  '/(app)/citizen-notifications/new': typeof appCitizenNotificationsNewRoute
  '/(app)/election-event/$tab': typeof appElectionEventTabRoute
  '/(app)/form-templates/$formTemplateId': typeof appFormTemplatesFormTemplateIdRoute
  '/(app)/form-templates/new': typeof appFormTemplatesNewRoute
  '/(app)/forms/$formId': typeof appFormsFormIdRoute
  '/(app)/forms/new': typeof appFormsNewRoute
  '/(app)/monitoring-observers/$tab': typeof appMonitoringObserversTabRoute
  '/(app)/monitoring-observers/create-new-message': typeof appMonitoringObserversCreateNewMessageRoute
  '/(app)/monitoring-observers/import': typeof appMonitoringObserversImportRoute
  '/(app)/observer-guides/new': typeof appObserverGuidesNewRoute
  '/(app)/observers/$observerId': typeof appObserversObserverIdRouteWithChildren
  '/(auth)/accept-invite/success': typeof authAcceptInviteSuccessRoute
  '/(auth)/reset-password/success': typeof authResetPasswordSuccessRoute
  '/(app)/election-event/': typeof appElectionEventIndexRoute
  '/(app)/election-rounds/': typeof appElectionRoundsIndexRoute
  '/(app)/form-templates/': typeof appFormTemplatesIndexRoute
  '/(app)/monitoring-observers/': typeof appMonitoringObserversIndexRoute
  '/(app)/ngos/': typeof appNgosIndexRoute
  '/(app)/observers/': typeof appObserversIndexRoute
  '/(app)/responses/': typeof appResponsesIndexRoute
  '/(auth)/accept-invite/': typeof authAcceptInviteIndexRoute
  '/(auth)/reset-password/': typeof authResetPasswordIndexRoute
  '/(app)/citizen-guides/edit/$guideId': typeof appCitizenGuidesEditGuideIdRoute
  '/(app)/citizen-guides/view/$guideId': typeof appCitizenGuidesViewGuideIdRoute
  '/(app)/citizen-notifications/view/$notificationId': typeof appCitizenNotificationsViewNotificationIdRoute
  '/(app)/election-rounds/$electionRoundId/$tab': typeof appElectionRoundsElectionRoundIdTabRoute
  '/(app)/election-rounds/$electionRoundId/edit': typeof appElectionRoundsElectionRoundIdEditRoute
  '/(app)/form-templates/$formTemplateId_/$languageCode': typeof appFormTemplatesFormTemplateIdLanguageCodeRoute
  '/(app)/form-templates/$formTemplateId_/edit': typeof appFormTemplatesFormTemplateIdEditRoute
  '/(app)/forms/$formId_/$languageCode': typeof appFormsFormIdLanguageCodeRoute
  '/(app)/forms/$formId_/edit': typeof appFormsFormIdEditRoute
  '/(app)/forms/new_/reuse': typeof appFormsNewReuseRoute
  '/(app)/forms/new_/scratch': typeof appFormsNewScratchRoute
  '/(app)/forms/new_/template': typeof appFormsNewTemplateRoute
  '/(app)/monitoring-observers/edit/$monitoringObserverId': typeof appMonitoringObserversEditMonitoringObserverIdRoute
  '/(app)/monitoring-observers/push-messages/$id': typeof appMonitoringObserversPushMessagesIdRoute
  '/(app)/observer-guides/edit/$guideId': typeof appObserverGuidesEditGuideIdRoute
  '/(app)/observer-guides/view/$guideId': typeof appObserverGuidesViewGuideIdRoute
  '/(app)/observers/$observerId/edit': typeof appObserversObserverIdEditRoute
  '/(app)/responses/citizen-reports/$citizenReportId': typeof appResponsesCitizenReportsCitizenReportIdRoute
  '/(app)/responses/form-submissions/$submissionId': typeof appResponsesFormSubmissionsSubmissionIdRoute
  '/(app)/responses/incident-reports/$incidentReportId': typeof appResponsesIncidentReportsIncidentReportIdRoute
  '/(app)/responses/quick-reports/$quickReportId': typeof appResponsesQuickReportsQuickReportIdRoute
  '/(app)/election-rounds/$electionRoundId/': typeof appElectionRoundsElectionRoundIdIndexRoute
  '/(app)/ngos/edit/$ngoId/': typeof appNgosEditNgoIdRoute
  '/(app)/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': typeof appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  '/(app)/election-rounds/$electionRoundId/locations/import': typeof appElectionRoundsElectionRoundIdLocationsImportRoute
  '/(app)/election-rounds/$electionRoundId/polling-stations/import': typeof appElectionRoundsElectionRoundIdPollingStationsImportRoute
  '/(app)/form-templates/$formTemplateId_/edit-translation/$languageCode': typeof appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  '/(app)/forms/$formId_/edit-translation/$languageCode': typeof appFormsFormIdEditTranslationLanguageCodeRoute
  '/(app)/monitoring-observers/push-messages/$id_/view': typeof appMonitoringObserversPushMessagesIdViewRoute
  '/(app)/monitoring-observers/view/$monitoringObserverId/$tab': typeof appMonitoringObserversViewMonitoringObserverIdTabRoute
  '/(app)/ngos/view/$ngoId/$tab': typeof appNgosViewNgoIdTabRoute
  '/(app)/responses/citizen-reports/$formId/aggregated': typeof appResponsesCitizenReportsFormIdAggregatedRoute
  '/(app)/responses/form-submissions/$formId/aggregated': typeof appResponsesFormSubmissionsFormIdAggregatedRoute
  '/(app)/responses/incident-reports/$formId/aggregated': typeof appResponsesIncidentReportsFormIdAggregatedRoute
  '/(app)/ngos/admin/$ngoId/$adminId/edit': typeof appNgosAdminNgoIdAdminIdEditRoute
  '/(app)/ngos/admin/$ngoId/$adminId/view': typeof appNgosAdminNgoIdAdminIdViewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/citizen-guides/new'
    | '/citizen-notifications/new'
    | '/election-event/$tab'
    | '/form-templates/$formTemplateId'
    | '/form-templates/new'
    | '/forms/$formId'
    | '/forms/new'
    | '/monitoring-observers/$tab'
    | '/monitoring-observers/create-new-message'
    | '/monitoring-observers/import'
    | '/observer-guides/new'
    | '/observers/$observerId'
    | '/accept-invite/success'
    | '/reset-password/success'
    | '/election-event'
    | '/election-rounds'
    | '/form-templates'
    | '/monitoring-observers'
    | '/ngos'
    | '/observers'
    | '/responses'
    | '/accept-invite'
    | '/reset-password'
    | '/citizen-guides/edit/$guideId'
    | '/citizen-guides/view/$guideId'
    | '/citizen-notifications/view/$notificationId'
    | '/election-rounds/$electionRoundId/$tab'
    | '/election-rounds/$electionRoundId/edit'
    | '/form-templates/$formTemplateId/$languageCode'
    | '/form-templates/$formTemplateId/edit'
    | '/forms/$formId/$languageCode'
    | '/forms/$formId/edit'
    | '/forms/new/reuse'
    | '/forms/new/scratch'
    | '/forms/new/template'
    | '/monitoring-observers/edit/$monitoringObserverId'
    | '/monitoring-observers/push-messages/$id'
    | '/observer-guides/edit/$guideId'
    | '/observer-guides/view/$guideId'
    | '/observers/$observerId/edit'
    | '/responses/citizen-reports/$citizenReportId'
    | '/responses/form-submissions/$submissionId'
    | '/responses/incident-reports/$incidentReportId'
    | '/responses/quick-reports/$quickReportId'
    | '/election-rounds/$electionRoundId'
    | '/ngos/edit/$ngoId'
    | '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
    | '/election-rounds/$electionRoundId/locations/import'
    | '/election-rounds/$electionRoundId/polling-stations/import'
    | '/form-templates/$formTemplateId/edit-translation/$languageCode'
    | '/forms/$formId/edit-translation/$languageCode'
    | '/monitoring-observers/push-messages/$id/view'
    | '/monitoring-observers/view/$monitoringObserverId/$tab'
    | '/ngos/view/$ngoId/$tab'
    | '/responses/citizen-reports/$formId/aggregated'
    | '/responses/form-submissions/$formId/aggregated'
    | '/responses/incident-reports/$formId/aggregated'
    | '/ngos/admin/$ngoId/$adminId/edit'
    | '/ngos/admin/$ngoId/$adminId/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/login'
    | '/'
    | '/citizen-guides/new'
    | '/citizen-notifications/new'
    | '/election-event/$tab'
    | '/form-templates/$formTemplateId'
    | '/form-templates/new'
    | '/forms/$formId'
    | '/forms/new'
    | '/monitoring-observers/$tab'
    | '/monitoring-observers/create-new-message'
    | '/monitoring-observers/import'
    | '/observer-guides/new'
    | '/observers/$observerId'
    | '/accept-invite/success'
    | '/reset-password/success'
    | '/election-event'
    | '/election-rounds'
    | '/form-templates'
    | '/monitoring-observers'
    | '/ngos'
    | '/observers'
    | '/responses'
    | '/accept-invite'
    | '/reset-password'
    | '/citizen-guides/edit/$guideId'
    | '/citizen-guides/view/$guideId'
    | '/citizen-notifications/view/$notificationId'
    | '/election-rounds/$electionRoundId/$tab'
    | '/election-rounds/$electionRoundId/edit'
    | '/form-templates/$formTemplateId/$languageCode'
    | '/form-templates/$formTemplateId/edit'
    | '/forms/$formId/$languageCode'
    | '/forms/$formId/edit'
    | '/forms/new/reuse'
    | '/forms/new/scratch'
    | '/forms/new/template'
    | '/monitoring-observers/edit/$monitoringObserverId'
    | '/monitoring-observers/push-messages/$id'
    | '/observer-guides/edit/$guideId'
    | '/observer-guides/view/$guideId'
    | '/observers/$observerId/edit'
    | '/responses/citizen-reports/$citizenReportId'
    | '/responses/form-submissions/$submissionId'
    | '/responses/incident-reports/$incidentReportId'
    | '/responses/quick-reports/$quickReportId'
    | '/election-rounds/$electionRoundId'
    | '/ngos/edit/$ngoId'
    | '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
    | '/election-rounds/$electionRoundId/locations/import'
    | '/election-rounds/$electionRoundId/polling-stations/import'
    | '/form-templates/$formTemplateId/edit-translation/$languageCode'
    | '/forms/$formId/edit-translation/$languageCode'
    | '/monitoring-observers/push-messages/$id/view'
    | '/monitoring-observers/view/$monitoringObserverId/$tab'
    | '/ngos/view/$ngoId/$tab'
    | '/responses/citizen-reports/$formId/aggregated'
    | '/responses/form-submissions/$formId/aggregated'
    | '/responses/incident-reports/$formId/aggregated'
    | '/ngos/admin/$ngoId/$adminId/edit'
    | '/ngos/admin/$ngoId/$adminId/view'
  id:
    | '__root__'
    | '/(app)'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(app)/'
    | '/(app)/citizen-guides/new'
    | '/(app)/citizen-notifications/new'
    | '/(app)/election-event/$tab'
    | '/(app)/form-templates/$formTemplateId'
    | '/(app)/form-templates/new'
    | '/(app)/forms/$formId'
    | '/(app)/forms/new'
    | '/(app)/monitoring-observers/$tab'
    | '/(app)/monitoring-observers/create-new-message'
    | '/(app)/monitoring-observers/import'
    | '/(app)/observer-guides/new'
    | '/(app)/observers/$observerId'
    | '/(auth)/accept-invite/success'
    | '/(auth)/reset-password/success'
    | '/(app)/election-event/'
    | '/(app)/election-rounds/'
    | '/(app)/form-templates/'
    | '/(app)/monitoring-observers/'
    | '/(app)/ngos/'
    | '/(app)/observers/'
    | '/(app)/responses/'
    | '/(auth)/accept-invite/'
    | '/(auth)/reset-password/'
    | '/(app)/citizen-guides/edit/$guideId'
    | '/(app)/citizen-guides/view/$guideId'
    | '/(app)/citizen-notifications/view/$notificationId'
    | '/(app)/election-rounds/$electionRoundId/$tab'
    | '/(app)/election-rounds/$electionRoundId/edit'
    | '/(app)/form-templates/$formTemplateId_/$languageCode'
    | '/(app)/form-templates/$formTemplateId_/edit'
    | '/(app)/forms/$formId_/$languageCode'
    | '/(app)/forms/$formId_/edit'
    | '/(app)/forms/new_/reuse'
    | '/(app)/forms/new_/scratch'
    | '/(app)/forms/new_/template'
    | '/(app)/monitoring-observers/edit/$monitoringObserverId'
    | '/(app)/monitoring-observers/push-messages/$id'
    | '/(app)/observer-guides/edit/$guideId'
    | '/(app)/observer-guides/view/$guideId'
    | '/(app)/observers/$observerId/edit'
    | '/(app)/responses/citizen-reports/$citizenReportId'
    | '/(app)/responses/form-submissions/$submissionId'
    | '/(app)/responses/incident-reports/$incidentReportId'
    | '/(app)/responses/quick-reports/$quickReportId'
    | '/(app)/election-rounds/$electionRoundId/'
    | '/(app)/ngos/edit/$ngoId/'
    | '/(app)/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
    | '/(app)/election-rounds/$electionRoundId/locations/import'
    | '/(app)/election-rounds/$electionRoundId/polling-stations/import'
    | '/(app)/form-templates/$formTemplateId_/edit-translation/$languageCode'
    | '/(app)/forms/$formId_/edit-translation/$languageCode'
    | '/(app)/monitoring-observers/push-messages/$id_/view'
    | '/(app)/monitoring-observers/view/$monitoringObserverId/$tab'
    | '/(app)/ngos/view/$ngoId/$tab'
    | '/(app)/responses/citizen-reports/$formId/aggregated'
    | '/(app)/responses/form-submissions/$formId/aggregated'
    | '/(app)/responses/incident-reports/$formId/aggregated'
    | '/(app)/ngos/admin/$ngoId/$adminId/edit'
    | '/(app)/ngos/admin/$ngoId/$adminId/view'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authAcceptInviteSuccessRoute: typeof authAcceptInviteSuccessRoute
  authResetPasswordSuccessRoute: typeof authResetPasswordSuccessRoute
  authAcceptInviteIndexRoute: typeof authAcceptInviteIndexRoute
  authResetPasswordIndexRoute: typeof authResetPasswordIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/reset-password/': {
      id: '/(auth)/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/accept-invite/': {
      id: '/(auth)/accept-invite/'
      path: '/accept-invite'
      fullPath: '/accept-invite'
      preLoaderRoute: typeof authAcceptInviteIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/responses/': {
      id: '/(app)/responses/'
      path: '/responses'
      fullPath: '/responses'
      preLoaderRoute: typeof appResponsesIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/observers/': {
      id: '/(app)/observers/'
      path: '/observers'
      fullPath: '/observers'
      preLoaderRoute: typeof appObserversIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/ngos/': {
      id: '/(app)/ngos/'
      path: '/ngos'
      fullPath: '/ngos'
      preLoaderRoute: typeof appNgosIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/': {
      id: '/(app)/monitoring-observers/'
      path: '/monitoring-observers'
      fullPath: '/monitoring-observers'
      preLoaderRoute: typeof appMonitoringObserversIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/form-templates/': {
      id: '/(app)/form-templates/'
      path: '/form-templates'
      fullPath: '/form-templates'
      preLoaderRoute: typeof appFormTemplatesIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-rounds/': {
      id: '/(app)/election-rounds/'
      path: '/election-rounds'
      fullPath: '/election-rounds'
      preLoaderRoute: typeof appElectionRoundsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-event/': {
      id: '/(app)/election-event/'
      path: '/election-event'
      fullPath: '/election-event'
      preLoaderRoute: typeof appElectionEventIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(auth)/reset-password/success': {
      id: '/(auth)/reset-password/success'
      path: '/reset-password/success'
      fullPath: '/reset-password/success'
      preLoaderRoute: typeof authResetPasswordSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/accept-invite/success': {
      id: '/(auth)/accept-invite/success'
      path: '/accept-invite/success'
      fullPath: '/accept-invite/success'
      preLoaderRoute: typeof authAcceptInviteSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/observers/$observerId': {
      id: '/(app)/observers/$observerId'
      path: '/observers/$observerId'
      fullPath: '/observers/$observerId'
      preLoaderRoute: typeof appObserversObserverIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/observer-guides/new': {
      id: '/(app)/observer-guides/new'
      path: '/observer-guides/new'
      fullPath: '/observer-guides/new'
      preLoaderRoute: typeof appObserverGuidesNewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/import': {
      id: '/(app)/monitoring-observers/import'
      path: '/monitoring-observers/import'
      fullPath: '/monitoring-observers/import'
      preLoaderRoute: typeof appMonitoringObserversImportRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/create-new-message': {
      id: '/(app)/monitoring-observers/create-new-message'
      path: '/monitoring-observers/create-new-message'
      fullPath: '/monitoring-observers/create-new-message'
      preLoaderRoute: typeof appMonitoringObserversCreateNewMessageRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/$tab': {
      id: '/(app)/monitoring-observers/$tab'
      path: '/monitoring-observers/$tab'
      fullPath: '/monitoring-observers/$tab'
      preLoaderRoute: typeof appMonitoringObserversTabRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/new': {
      id: '/(app)/forms/new'
      path: '/forms/new'
      fullPath: '/forms/new'
      preLoaderRoute: typeof appFormsNewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/$formId': {
      id: '/(app)/forms/$formId'
      path: '/forms/$formId'
      fullPath: '/forms/$formId'
      preLoaderRoute: typeof appFormsFormIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/form-templates/new': {
      id: '/(app)/form-templates/new'
      path: '/form-templates/new'
      fullPath: '/form-templates/new'
      preLoaderRoute: typeof appFormTemplatesNewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/form-templates/$formTemplateId': {
      id: '/(app)/form-templates/$formTemplateId'
      path: '/form-templates/$formTemplateId'
      fullPath: '/form-templates/$formTemplateId'
      preLoaderRoute: typeof appFormTemplatesFormTemplateIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-event/$tab': {
      id: '/(app)/election-event/$tab'
      path: '/election-event/$tab'
      fullPath: '/election-event/$tab'
      preLoaderRoute: typeof appElectionEventTabRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/citizen-notifications/new': {
      id: '/(app)/citizen-notifications/new'
      path: '/citizen-notifications/new'
      fullPath: '/citizen-notifications/new'
      preLoaderRoute: typeof appCitizenNotificationsNewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/citizen-guides/new': {
      id: '/(app)/citizen-guides/new'
      path: '/citizen-guides/new'
      fullPath: '/citizen-guides/new'
      preLoaderRoute: typeof appCitizenGuidesNewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-rounds/$electionRoundId/': {
      id: '/(app)/election-rounds/$electionRoundId/'
      path: '/election-rounds/$electionRoundId'
      fullPath: '/election-rounds/$electionRoundId'
      preLoaderRoute: typeof appElectionRoundsElectionRoundIdIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/responses/quick-reports/$quickReportId': {
      id: '/(app)/responses/quick-reports/$quickReportId'
      path: '/responses/quick-reports/$quickReportId'
      fullPath: '/responses/quick-reports/$quickReportId'
      preLoaderRoute: typeof appResponsesQuickReportsQuickReportIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/responses/incident-reports/$incidentReportId': {
      id: '/(app)/responses/incident-reports/$incidentReportId'
      path: '/responses/incident-reports/$incidentReportId'
      fullPath: '/responses/incident-reports/$incidentReportId'
      preLoaderRoute: typeof appResponsesIncidentReportsIncidentReportIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/responses/form-submissions/$submissionId': {
      id: '/(app)/responses/form-submissions/$submissionId'
      path: '/responses/form-submissions/$submissionId'
      fullPath: '/responses/form-submissions/$submissionId'
      preLoaderRoute: typeof appResponsesFormSubmissionsSubmissionIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/responses/citizen-reports/$citizenReportId': {
      id: '/(app)/responses/citizen-reports/$citizenReportId'
      path: '/responses/citizen-reports/$citizenReportId'
      fullPath: '/responses/citizen-reports/$citizenReportId'
      preLoaderRoute: typeof appResponsesCitizenReportsCitizenReportIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/observers/$observerId/edit': {
      id: '/(app)/observers/$observerId/edit'
      path: '/edit'
      fullPath: '/observers/$observerId/edit'
      preLoaderRoute: typeof appObserversObserverIdEditRouteImport
      parentRoute: typeof appObserversObserverIdRoute
    }
    '/(app)/observer-guides/view/$guideId': {
      id: '/(app)/observer-guides/view/$guideId'
      path: '/observer-guides/view/$guideId'
      fullPath: '/observer-guides/view/$guideId'
      preLoaderRoute: typeof appObserverGuidesViewGuideIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/observer-guides/edit/$guideId': {
      id: '/(app)/observer-guides/edit/$guideId'
      path: '/observer-guides/edit/$guideId'
      fullPath: '/observer-guides/edit/$guideId'
      preLoaderRoute: typeof appObserverGuidesEditGuideIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/push-messages/$id': {
      id: '/(app)/monitoring-observers/push-messages/$id'
      path: '/monitoring-observers/push-messages/$id'
      fullPath: '/monitoring-observers/push-messages/$id'
      preLoaderRoute: typeof appMonitoringObserversPushMessagesIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/edit/$monitoringObserverId': {
      id: '/(app)/monitoring-observers/edit/$monitoringObserverId'
      path: '/monitoring-observers/edit/$monitoringObserverId'
      fullPath: '/monitoring-observers/edit/$monitoringObserverId'
      preLoaderRoute: typeof appMonitoringObserversEditMonitoringObserverIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/new_/template': {
      id: '/(app)/forms/new_/template'
      path: '/forms/new/template'
      fullPath: '/forms/new/template'
      preLoaderRoute: typeof appFormsNewTemplateRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/new_/scratch': {
      id: '/(app)/forms/new_/scratch'
      path: '/forms/new/scratch'
      fullPath: '/forms/new/scratch'
      preLoaderRoute: typeof appFormsNewScratchRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/new_/reuse': {
      id: '/(app)/forms/new_/reuse'
      path: '/forms/new/reuse'
      fullPath: '/forms/new/reuse'
      preLoaderRoute: typeof appFormsNewReuseRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/$formId_/edit': {
      id: '/(app)/forms/$formId_/edit'
      path: '/forms/$formId/edit'
      fullPath: '/forms/$formId/edit'
      preLoaderRoute: typeof appFormsFormIdEditRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/$formId_/$languageCode': {
      id: '/(app)/forms/$formId_/$languageCode'
      path: '/forms/$formId/$languageCode'
      fullPath: '/forms/$formId/$languageCode'
      preLoaderRoute: typeof appFormsFormIdLanguageCodeRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/form-templates/$formTemplateId_/edit': {
      id: '/(app)/form-templates/$formTemplateId_/edit'
      path: '/form-templates/$formTemplateId/edit'
      fullPath: '/form-templates/$formTemplateId/edit'
      preLoaderRoute: typeof appFormTemplatesFormTemplateIdEditRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/form-templates/$formTemplateId_/$languageCode': {
      id: '/(app)/form-templates/$formTemplateId_/$languageCode'
      path: '/form-templates/$formTemplateId/$languageCode'
      fullPath: '/form-templates/$formTemplateId/$languageCode'
      preLoaderRoute: typeof appFormTemplatesFormTemplateIdLanguageCodeRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-rounds/$electionRoundId/edit': {
      id: '/(app)/election-rounds/$electionRoundId/edit'
      path: '/election-rounds/$electionRoundId/edit'
      fullPath: '/election-rounds/$electionRoundId/edit'
      preLoaderRoute: typeof appElectionRoundsElectionRoundIdEditRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-rounds/$electionRoundId/$tab': {
      id: '/(app)/election-rounds/$electionRoundId/$tab'
      path: '/election-rounds/$electionRoundId/$tab'
      fullPath: '/election-rounds/$electionRoundId/$tab'
      preLoaderRoute: typeof appElectionRoundsElectionRoundIdTabRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/citizen-notifications/view/$notificationId': {
      id: '/(app)/citizen-notifications/view/$notificationId'
      path: '/citizen-notifications/view/$notificationId'
      fullPath: '/citizen-notifications/view/$notificationId'
      preLoaderRoute: typeof appCitizenNotificationsViewNotificationIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/citizen-guides/view/$guideId': {
      id: '/(app)/citizen-guides/view/$guideId'
      path: '/citizen-guides/view/$guideId'
      fullPath: '/citizen-guides/view/$guideId'
      preLoaderRoute: typeof appCitizenGuidesViewGuideIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/citizen-guides/edit/$guideId': {
      id: '/(app)/citizen-guides/edit/$guideId'
      path: '/citizen-guides/edit/$guideId'
      fullPath: '/citizen-guides/edit/$guideId'
      preLoaderRoute: typeof appCitizenGuidesEditGuideIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/responses/incident-reports/$formId/aggregated': {
      id: '/(app)/responses/incident-reports/$formId/aggregated'
      path: '/responses/incident-reports/$formId/aggregated'
      fullPath: '/responses/incident-reports/$formId/aggregated'
      preLoaderRoute: typeof appResponsesIncidentReportsFormIdAggregatedRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/responses/form-submissions/$formId/aggregated': {
      id: '/(app)/responses/form-submissions/$formId/aggregated'
      path: '/responses/form-submissions/$formId/aggregated'
      fullPath: '/responses/form-submissions/$formId/aggregated'
      preLoaderRoute: typeof appResponsesFormSubmissionsFormIdAggregatedRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/responses/citizen-reports/$formId/aggregated': {
      id: '/(app)/responses/citizen-reports/$formId/aggregated'
      path: '/responses/citizen-reports/$formId/aggregated'
      fullPath: '/responses/citizen-reports/$formId/aggregated'
      preLoaderRoute: typeof appResponsesCitizenReportsFormIdAggregatedRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/ngos/view/$ngoId/$tab': {
      id: '/(app)/ngos/view/$ngoId/$tab'
      path: '/ngos/view/$ngoId/$tab'
      fullPath: '/ngos/view/$ngoId/$tab'
      preLoaderRoute: typeof appNgosViewNgoIdTabRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/view/$monitoringObserverId/$tab': {
      id: '/(app)/monitoring-observers/view/$monitoringObserverId/$tab'
      path: '/monitoring-observers/view/$monitoringObserverId/$tab'
      fullPath: '/monitoring-observers/view/$monitoringObserverId/$tab'
      preLoaderRoute: typeof appMonitoringObserversViewMonitoringObserverIdTabRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/monitoring-observers/push-messages/$id_/view': {
      id: '/(app)/monitoring-observers/push-messages/$id_/view'
      path: '/monitoring-observers/push-messages/$id/view'
      fullPath: '/monitoring-observers/push-messages/$id/view'
      preLoaderRoute: typeof appMonitoringObserversPushMessagesIdViewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/forms/$formId_/edit-translation/$languageCode': {
      id: '/(app)/forms/$formId_/edit-translation/$languageCode'
      path: '/forms/$formId/edit-translation/$languageCode'
      fullPath: '/forms/$formId/edit-translation/$languageCode'
      preLoaderRoute: typeof appFormsFormIdEditTranslationLanguageCodeRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/form-templates/$formTemplateId_/edit-translation/$languageCode': {
      id: '/(app)/form-templates/$formTemplateId_/edit-translation/$languageCode'
      path: '/form-templates/$formTemplateId/edit-translation/$languageCode'
      fullPath: '/form-templates/$formTemplateId/edit-translation/$languageCode'
      preLoaderRoute: typeof appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-rounds/$electionRoundId/polling-stations/import': {
      id: '/(app)/election-rounds/$electionRoundId/polling-stations/import'
      path: '/election-rounds/$electionRoundId/polling-stations/import'
      fullPath: '/election-rounds/$electionRoundId/polling-stations/import'
      preLoaderRoute: typeof appElectionRoundsElectionRoundIdPollingStationsImportRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/election-rounds/$electionRoundId/locations/import': {
      id: '/(app)/election-rounds/$electionRoundId/locations/import'
      path: '/election-rounds/$electionRoundId/locations/import'
      fullPath: '/election-rounds/$electionRoundId/locations/import'
      preLoaderRoute: typeof appElectionRoundsElectionRoundIdLocationsImportRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': {
      id: '/(app)/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
      path: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
      fullPath: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
      preLoaderRoute: typeof appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/ngos/edit/$ngoId/': {
      id: '/(app)/ngos/edit/$ngoId/'
      path: '/ngos/edit/$ngoId'
      fullPath: '/ngos/edit/$ngoId'
      preLoaderRoute: typeof appNgosEditNgoIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/ngos/admin/$ngoId/$adminId/view': {
      id: '/(app)/ngos/admin/$ngoId/$adminId/view'
      path: '/ngos/admin/$ngoId/$adminId/view'
      fullPath: '/ngos/admin/$ngoId/$adminId/view'
      preLoaderRoute: typeof appNgosAdminNgoIdAdminIdViewRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/ngos/admin/$ngoId/$adminId/edit': {
      id: '/(app)/ngos/admin/$ngoId/$adminId/edit'
      path: '/ngos/admin/$ngoId/$adminId/edit'
      fullPath: '/ngos/admin/$ngoId/$adminId/edit'
      preLoaderRoute: typeof appNgosAdminNgoIdAdminIdEditRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

interface appObserversObserverIdRouteChildren {
  appObserversObserverIdEditRoute: typeof appObserversObserverIdEditRoute
}

const appObserversObserverIdRouteChildren: appObserversObserverIdRouteChildren =
  {
    appObserversObserverIdEditRoute: appObserversObserverIdEditRoute,
  }

const appObserversObserverIdRouteWithChildren =
  appObserversObserverIdRoute._addFileChildren(
    appObserversObserverIdRouteChildren,
  )

interface appRouteRouteChildren {
  appIndexRoute: typeof appIndexRoute
  appCitizenGuidesNewRoute: typeof appCitizenGuidesNewRoute
  appCitizenNotificationsNewRoute: typeof appCitizenNotificationsNewRoute
  appElectionEventTabRoute: typeof appElectionEventTabRoute
  appFormTemplatesFormTemplateIdRoute: typeof appFormTemplatesFormTemplateIdRoute
  appFormTemplatesNewRoute: typeof appFormTemplatesNewRoute
  appFormsFormIdRoute: typeof appFormsFormIdRoute
  appFormsNewRoute: typeof appFormsNewRoute
  appMonitoringObserversTabRoute: typeof appMonitoringObserversTabRoute
  appMonitoringObserversCreateNewMessageRoute: typeof appMonitoringObserversCreateNewMessageRoute
  appMonitoringObserversImportRoute: typeof appMonitoringObserversImportRoute
  appObserverGuidesNewRoute: typeof appObserverGuidesNewRoute
  appObserversObserverIdRoute: typeof appObserversObserverIdRouteWithChildren
  appElectionEventIndexRoute: typeof appElectionEventIndexRoute
  appElectionRoundsIndexRoute: typeof appElectionRoundsIndexRoute
  appFormTemplatesIndexRoute: typeof appFormTemplatesIndexRoute
  appMonitoringObserversIndexRoute: typeof appMonitoringObserversIndexRoute
  appNgosIndexRoute: typeof appNgosIndexRoute
  appObserversIndexRoute: typeof appObserversIndexRoute
  appResponsesIndexRoute: typeof appResponsesIndexRoute
  appCitizenGuidesEditGuideIdRoute: typeof appCitizenGuidesEditGuideIdRoute
  appCitizenGuidesViewGuideIdRoute: typeof appCitizenGuidesViewGuideIdRoute
  appCitizenNotificationsViewNotificationIdRoute: typeof appCitizenNotificationsViewNotificationIdRoute
  appElectionRoundsElectionRoundIdTabRoute: typeof appElectionRoundsElectionRoundIdTabRoute
  appElectionRoundsElectionRoundIdEditRoute: typeof appElectionRoundsElectionRoundIdEditRoute
  appFormTemplatesFormTemplateIdLanguageCodeRoute: typeof appFormTemplatesFormTemplateIdLanguageCodeRoute
  appFormTemplatesFormTemplateIdEditRoute: typeof appFormTemplatesFormTemplateIdEditRoute
  appFormsFormIdLanguageCodeRoute: typeof appFormsFormIdLanguageCodeRoute
  appFormsFormIdEditRoute: typeof appFormsFormIdEditRoute
  appFormsNewReuseRoute: typeof appFormsNewReuseRoute
  appFormsNewScratchRoute: typeof appFormsNewScratchRoute
  appFormsNewTemplateRoute: typeof appFormsNewTemplateRoute
  appMonitoringObserversEditMonitoringObserverIdRoute: typeof appMonitoringObserversEditMonitoringObserverIdRoute
  appMonitoringObserversPushMessagesIdRoute: typeof appMonitoringObserversPushMessagesIdRoute
  appObserverGuidesEditGuideIdRoute: typeof appObserverGuidesEditGuideIdRoute
  appObserverGuidesViewGuideIdRoute: typeof appObserverGuidesViewGuideIdRoute
  appResponsesCitizenReportsCitizenReportIdRoute: typeof appResponsesCitizenReportsCitizenReportIdRoute
  appResponsesFormSubmissionsSubmissionIdRoute: typeof appResponsesFormSubmissionsSubmissionIdRoute
  appResponsesIncidentReportsIncidentReportIdRoute: typeof appResponsesIncidentReportsIncidentReportIdRoute
  appResponsesQuickReportsQuickReportIdRoute: typeof appResponsesQuickReportsQuickReportIdRoute
  appElectionRoundsElectionRoundIdIndexRoute: typeof appElectionRoundsElectionRoundIdIndexRoute
  appNgosEditNgoIdRoute: typeof appNgosEditNgoIdRoute
  appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute: typeof appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  appElectionRoundsElectionRoundIdLocationsImportRoute: typeof appElectionRoundsElectionRoundIdLocationsImportRoute
  appElectionRoundsElectionRoundIdPollingStationsImportRoute: typeof appElectionRoundsElectionRoundIdPollingStationsImportRoute
  appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute: typeof appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  appFormsFormIdEditTranslationLanguageCodeRoute: typeof appFormsFormIdEditTranslationLanguageCodeRoute
  appMonitoringObserversPushMessagesIdViewRoute: typeof appMonitoringObserversPushMessagesIdViewRoute
  appMonitoringObserversViewMonitoringObserverIdTabRoute: typeof appMonitoringObserversViewMonitoringObserverIdTabRoute
  appNgosViewNgoIdTabRoute: typeof appNgosViewNgoIdTabRoute
  appResponsesCitizenReportsFormIdAggregatedRoute: typeof appResponsesCitizenReportsFormIdAggregatedRoute
  appResponsesFormSubmissionsFormIdAggregatedRoute: typeof appResponsesFormSubmissionsFormIdAggregatedRoute
  appResponsesIncidentReportsFormIdAggregatedRoute: typeof appResponsesIncidentReportsFormIdAggregatedRoute
  appNgosAdminNgoIdAdminIdEditRoute: typeof appNgosAdminNgoIdAdminIdEditRoute
  appNgosAdminNgoIdAdminIdViewRoute: typeof appNgosAdminNgoIdAdminIdViewRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appIndexRoute: appIndexRoute,
  appCitizenGuidesNewRoute: appCitizenGuidesNewRoute,
  appCitizenNotificationsNewRoute: appCitizenNotificationsNewRoute,
  appElectionEventTabRoute: appElectionEventTabRoute,
  appFormTemplatesFormTemplateIdRoute: appFormTemplatesFormTemplateIdRoute,
  appFormTemplatesNewRoute: appFormTemplatesNewRoute,
  appFormsFormIdRoute: appFormsFormIdRoute,
  appFormsNewRoute: appFormsNewRoute,
  appMonitoringObserversTabRoute: appMonitoringObserversTabRoute,
  appMonitoringObserversCreateNewMessageRoute:
    appMonitoringObserversCreateNewMessageRoute,
  appMonitoringObserversImportRoute: appMonitoringObserversImportRoute,
  appObserverGuidesNewRoute: appObserverGuidesNewRoute,
  appObserversObserverIdRoute: appObserversObserverIdRouteWithChildren,
  appElectionEventIndexRoute: appElectionEventIndexRoute,
  appElectionRoundsIndexRoute: appElectionRoundsIndexRoute,
  appFormTemplatesIndexRoute: appFormTemplatesIndexRoute,
  appMonitoringObserversIndexRoute: appMonitoringObserversIndexRoute,
  appNgosIndexRoute: appNgosIndexRoute,
  appObserversIndexRoute: appObserversIndexRoute,
  appResponsesIndexRoute: appResponsesIndexRoute,
  appCitizenGuidesEditGuideIdRoute: appCitizenGuidesEditGuideIdRoute,
  appCitizenGuidesViewGuideIdRoute: appCitizenGuidesViewGuideIdRoute,
  appCitizenNotificationsViewNotificationIdRoute:
    appCitizenNotificationsViewNotificationIdRoute,
  appElectionRoundsElectionRoundIdTabRoute:
    appElectionRoundsElectionRoundIdTabRoute,
  appElectionRoundsElectionRoundIdEditRoute:
    appElectionRoundsElectionRoundIdEditRoute,
  appFormTemplatesFormTemplateIdLanguageCodeRoute:
    appFormTemplatesFormTemplateIdLanguageCodeRoute,
  appFormTemplatesFormTemplateIdEditRoute:
    appFormTemplatesFormTemplateIdEditRoute,
  appFormsFormIdLanguageCodeRoute: appFormsFormIdLanguageCodeRoute,
  appFormsFormIdEditRoute: appFormsFormIdEditRoute,
  appFormsNewReuseRoute: appFormsNewReuseRoute,
  appFormsNewScratchRoute: appFormsNewScratchRoute,
  appFormsNewTemplateRoute: appFormsNewTemplateRoute,
  appMonitoringObserversEditMonitoringObserverIdRoute:
    appMonitoringObserversEditMonitoringObserverIdRoute,
  appMonitoringObserversPushMessagesIdRoute:
    appMonitoringObserversPushMessagesIdRoute,
  appObserverGuidesEditGuideIdRoute: appObserverGuidesEditGuideIdRoute,
  appObserverGuidesViewGuideIdRoute: appObserverGuidesViewGuideIdRoute,
  appResponsesCitizenReportsCitizenReportIdRoute:
    appResponsesCitizenReportsCitizenReportIdRoute,
  appResponsesFormSubmissionsSubmissionIdRoute:
    appResponsesFormSubmissionsSubmissionIdRoute,
  appResponsesIncidentReportsIncidentReportIdRoute:
    appResponsesIncidentReportsIncidentReportIdRoute,
  appResponsesQuickReportsQuickReportIdRoute:
    appResponsesQuickReportsQuickReportIdRoute,
  appElectionRoundsElectionRoundIdIndexRoute:
    appElectionRoundsElectionRoundIdIndexRoute,
  appNgosEditNgoIdRoute: appNgosEditNgoIdRoute,
  appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute:
    appCitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute,
  appElectionRoundsElectionRoundIdLocationsImportRoute:
    appElectionRoundsElectionRoundIdLocationsImportRoute,
  appElectionRoundsElectionRoundIdPollingStationsImportRoute:
    appElectionRoundsElectionRoundIdPollingStationsImportRoute,
  appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute:
    appFormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute,
  appFormsFormIdEditTranslationLanguageCodeRoute:
    appFormsFormIdEditTranslationLanguageCodeRoute,
  appMonitoringObserversPushMessagesIdViewRoute:
    appMonitoringObserversPushMessagesIdViewRoute,
  appMonitoringObserversViewMonitoringObserverIdTabRoute:
    appMonitoringObserversViewMonitoringObserverIdTabRoute,
  appNgosViewNgoIdTabRoute: appNgosViewNgoIdTabRoute,
  appResponsesCitizenReportsFormIdAggregatedRoute:
    appResponsesCitizenReportsFormIdAggregatedRoute,
  appResponsesFormSubmissionsFormIdAggregatedRoute:
    appResponsesFormSubmissionsFormIdAggregatedRoute,
  appResponsesIncidentReportsFormIdAggregatedRoute:
    appResponsesIncidentReportsFormIdAggregatedRoute,
  appNgosAdminNgoIdAdminIdEditRoute: appNgosAdminNgoIdAdminIdEditRoute,
  appNgosAdminNgoIdAdminIdViewRoute: appNgosAdminNgoIdAdminIdViewRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authAcceptInviteSuccessRoute: authAcceptInviteSuccessRoute,
  authResetPasswordSuccessRoute: authResetPasswordSuccessRoute,
  authAcceptInviteIndexRoute: authAcceptInviteIndexRoute,
  authResetPasswordIndexRoute: authResetPasswordIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
