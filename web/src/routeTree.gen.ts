/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ResponsesIndexImport } from './routes/responses/index'
import { Route as ResetPasswordIndexImport } from './routes/reset-password/index'
import { Route as ObserversIndexImport } from './routes/observers/index'
import { Route as NgosIndexImport } from './routes/ngos/index'
import { Route as MonitoringObserversIndexImport } from './routes/monitoring-observers/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as FormTemplatesIndexImport } from './routes/form-templates/index'
import { Route as ForgotPasswordIndexImport } from './routes/forgot-password/index'
import { Route as ElectionRoundsIndexImport } from './routes/election-rounds/index'
import { Route as ElectionEventIndexImport } from './routes/election-event/index'
import { Route as AcceptInviteIndexImport } from './routes/accept-invite/index'
import { Route as ResetPasswordSuccessImport } from './routes/reset-password/success'
import { Route as ObserversObserverIdImport } from './routes/observers/$observerId'
import { Route as ObserverGuidesNewImport } from './routes/observer-guides/new'
import { Route as NgosNgoIdImport } from './routes/ngos/$ngoId'
import { Route as MonitoringObserversImportImport } from './routes/monitoring-observers/import'
import { Route as MonitoringObserversCreateNewMessageImport } from './routes/monitoring-observers/create-new-message'
import { Route as MonitoringObserversTabImport } from './routes/monitoring-observers/$tab'
import { Route as FormsNewImport } from './routes/forms/new'
import { Route as FormsFormIdImport } from './routes/forms/$formId'
import { Route as FormTemplatesNewImport } from './routes/form-templates/new'
import { Route as FormTemplatesFormTemplateIdImport } from './routes/form-templates/$formTemplateId'
import { Route as ElectionEventTabImport } from './routes/election-event/$tab'
import { Route as CitizenNotificationsNewImport } from './routes/citizen-notifications/new'
import { Route as CitizenGuidesNewImport } from './routes/citizen-guides/new'
import { Route as AcceptInviteSuccessImport } from './routes/accept-invite/success'
import { Route as ElectionRoundsElectionRoundIdIndexImport } from './routes/election-rounds/$electionRoundId/index'
import { Route as ResponsesQuickReportsQuickReportIdImport } from './routes/responses/quick-reports/$quickReportId'
import { Route as ResponsesIncidentReportsIncidentReportIdImport } from './routes/responses/incident-reports/$incidentReportId'
import { Route as ResponsesFormSubmissionsSubmissionIdImport } from './routes/responses/form-submissions/$submissionId'
import { Route as ResponsesCitizenReportsCitizenReportIdImport } from './routes/responses/citizen-reports/$citizenReportId'
import { Route as ObserversObserverIdEditImport } from './routes/observers_.$observerId.edit'
import { Route as ObserverGuidesViewGuideIdImport } from './routes/observer-guides/view.$guideId'
import { Route as ObserverGuidesEditGuideIdImport } from './routes/observer-guides/edit.$guideId'
import { Route as MonitoringObserversPushMessagesIdImport } from './routes/monitoring-observers/push-messages.$id'
import { Route as MonitoringObserversEditMonitoringObserverIdImport } from './routes/monitoring-observers/edit.$monitoringObserverId'
import { Route as FormsNewTemplateImport } from './routes/forms/new_.template'
import { Route as FormsNewScratchImport } from './routes/forms/new_.scratch'
import { Route as FormsNewReuseImport } from './routes/forms/new_.reuse'
import { Route as FormsFormIdEditImport } from './routes/forms/$formId_.edit'
import { Route as FormsFormIdLanguageCodeImport } from './routes/forms/$formId_.$languageCode'
import { Route as FormTemplatesFormTemplateIdEditImport } from './routes/form-templates/$formTemplateId_.edit'
import { Route as FormTemplatesFormTemplateIdLanguageCodeImport } from './routes/form-templates/$formTemplateId_.$languageCode'
import { Route as ElectionRoundsElectionRoundIdEditImport } from './routes/election-rounds/$electionRoundId/edit'
import { Route as ElectionRoundsElectionRoundIdTabImport } from './routes/election-rounds/$electionRoundId/$tab'
import { Route as CitizenNotificationsViewNotificationIdImport } from './routes/citizen-notifications/view.$notificationId'
import { Route as CitizenGuidesViewGuideIdImport } from './routes/citizen-guides/view.$guideId'
import { Route as CitizenGuidesEditGuideIdImport } from './routes/citizen-guides/edit.$guideId'
import { Route as ResponsesIncidentReportsFormIdAggregatedImport } from './routes/responses/incident-reports/$formId.aggregated'
import { Route as ResponsesFormSubmissionsFormIdAggregatedImport } from './routes/responses/form-submissions/$formId.aggregated'
import { Route as ResponsesCitizenReportsFormIdAggregatedImport } from './routes/responses/citizen-reports/$formId.aggregated'
import { Route as MonitoringObserversViewMonitoringObserverIdTabImport } from './routes/monitoring-observers/view/$monitoringObserverId.$tab'
import { Route as MonitoringObserversPushMessagesIdViewImport } from './routes/monitoring-observers/push-messages.$id_.view'
import { Route as FormsFormIdEditTranslationLanguageCodeImport } from './routes/forms/$formId_.edit-translation.$languageCode'
import { Route as FormTemplatesFormTemplateIdEditTranslationLanguageCodeImport } from './routes/form-templates/$formTemplateId_.edit-translation.$languageCode'
import { Route as ElectionRoundsElectionRoundIdPollingStationsImportImport } from './routes/election-rounds/$electionRoundId/polling-stations/import'
import { Route as ElectionRoundsElectionRoundIdLocationsImportImport } from './routes/election-rounds/$electionRoundId/locations/import'
import { Route as CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdImport } from './routes/citizen-report-attachments/$electionRoundId.$citizenReportId.$attachmentId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResponsesIndexRoute = ResponsesIndexImport.update({
  id: '/responses/',
  path: '/responses/',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordIndexRoute = ResetPasswordIndexImport.update({
  id: '/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => rootRoute,
} as any)

const ObserversIndexRoute = ObserversIndexImport.update({
  id: '/observers/',
  path: '/observers/',
  getParentRoute: () => rootRoute,
} as any)

const NgosIndexRoute = NgosIndexImport.update({
  id: '/ngos/',
  path: '/ngos/',
  getParentRoute: () => rootRoute,
} as any)

const MonitoringObserversIndexRoute = MonitoringObserversIndexImport.update({
  id: '/monitoring-observers/',
  path: '/monitoring-observers/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const FormTemplatesIndexRoute = FormTemplatesIndexImport.update({
  id: '/form-templates/',
  path: '/form-templates/',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordIndexRoute = ForgotPasswordIndexImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

const ElectionRoundsIndexRoute = ElectionRoundsIndexImport.update({
  id: '/election-rounds/',
  path: '/election-rounds/',
  getParentRoute: () => rootRoute,
} as any)

const ElectionEventIndexRoute = ElectionEventIndexImport.update({
  id: '/election-event/',
  path: '/election-event/',
  getParentRoute: () => rootRoute,
} as any)

const AcceptInviteIndexRoute = AcceptInviteIndexImport.update({
  id: '/accept-invite/',
  path: '/accept-invite/',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordSuccessRoute = ResetPasswordSuccessImport.update({
  id: '/reset-password/success',
  path: '/reset-password/success',
  getParentRoute: () => rootRoute,
} as any)

const ObserversObserverIdRoute = ObserversObserverIdImport.update({
  id: '/observers/$observerId',
  path: '/observers/$observerId',
  getParentRoute: () => rootRoute,
} as any)

const ObserverGuidesNewRoute = ObserverGuidesNewImport.update({
  id: '/observer-guides/new',
  path: '/observer-guides/new',
  getParentRoute: () => rootRoute,
} as any)

const NgosNgoIdRoute = NgosNgoIdImport.update({
  id: '/ngos/$ngoId',
  path: '/ngos/$ngoId',
  getParentRoute: () => rootRoute,
} as any)

const MonitoringObserversImportRoute = MonitoringObserversImportImport.update({
  id: '/monitoring-observers/import',
  path: '/monitoring-observers/import',
  getParentRoute: () => rootRoute,
} as any)

const MonitoringObserversCreateNewMessageRoute =
  MonitoringObserversCreateNewMessageImport.update({
    id: '/monitoring-observers/create-new-message',
    path: '/monitoring-observers/create-new-message',
    getParentRoute: () => rootRoute,
  } as any)

const MonitoringObserversTabRoute = MonitoringObserversTabImport.update({
  id: '/monitoring-observers/$tab',
  path: '/monitoring-observers/$tab',
  getParentRoute: () => rootRoute,
} as any)

const FormsNewRoute = FormsNewImport.update({
  id: '/forms/new',
  path: '/forms/new',
  getParentRoute: () => rootRoute,
} as any)

const FormsFormIdRoute = FormsFormIdImport.update({
  id: '/forms/$formId',
  path: '/forms/$formId',
  getParentRoute: () => rootRoute,
} as any)

const FormTemplatesNewRoute = FormTemplatesNewImport.update({
  id: '/form-templates/new',
  path: '/form-templates/new',
  getParentRoute: () => rootRoute,
} as any)

const FormTemplatesFormTemplateIdRoute =
  FormTemplatesFormTemplateIdImport.update({
    id: '/form-templates/$formTemplateId',
    path: '/form-templates/$formTemplateId',
    getParentRoute: () => rootRoute,
  } as any)

const ElectionEventTabRoute = ElectionEventTabImport.update({
  id: '/election-event/$tab',
  path: '/election-event/$tab',
  getParentRoute: () => rootRoute,
} as any)

const CitizenNotificationsNewRoute = CitizenNotificationsNewImport.update({
  id: '/citizen-notifications/new',
  path: '/citizen-notifications/new',
  getParentRoute: () => rootRoute,
} as any)

const CitizenGuidesNewRoute = CitizenGuidesNewImport.update({
  id: '/citizen-guides/new',
  path: '/citizen-guides/new',
  getParentRoute: () => rootRoute,
} as any)

const AcceptInviteSuccessRoute = AcceptInviteSuccessImport.update({
  id: '/accept-invite/success',
  path: '/accept-invite/success',
  getParentRoute: () => rootRoute,
} as any)

const ElectionRoundsElectionRoundIdIndexRoute =
  ElectionRoundsElectionRoundIdIndexImport.update({
    id: '/election-rounds/$electionRoundId/',
    path: '/election-rounds/$electionRoundId/',
    getParentRoute: () => rootRoute,
  } as any)

const ResponsesQuickReportsQuickReportIdRoute =
  ResponsesQuickReportsQuickReportIdImport.update({
    id: '/responses/quick-reports/$quickReportId',
    path: '/responses/quick-reports/$quickReportId',
    getParentRoute: () => rootRoute,
  } as any)

const ResponsesIncidentReportsIncidentReportIdRoute =
  ResponsesIncidentReportsIncidentReportIdImport.update({
    id: '/responses/incident-reports/$incidentReportId',
    path: '/responses/incident-reports/$incidentReportId',
    getParentRoute: () => rootRoute,
  } as any)

const ResponsesFormSubmissionsSubmissionIdRoute =
  ResponsesFormSubmissionsSubmissionIdImport.update({
    id: '/responses/form-submissions/$submissionId',
    path: '/responses/form-submissions/$submissionId',
    getParentRoute: () => rootRoute,
  } as any)

const ResponsesCitizenReportsCitizenReportIdRoute =
  ResponsesCitizenReportsCitizenReportIdImport.update({
    id: '/responses/citizen-reports/$citizenReportId',
    path: '/responses/citizen-reports/$citizenReportId',
    getParentRoute: () => rootRoute,
  } as any)

const ObserversObserverIdEditRoute = ObserversObserverIdEditImport.update({
  id: '/observers_/$observerId/edit',
  path: '/observers/$observerId/edit',
  getParentRoute: () => rootRoute,
} as any)

const ObserverGuidesViewGuideIdRoute = ObserverGuidesViewGuideIdImport.update({
  id: '/observer-guides/view/$guideId',
  path: '/observer-guides/view/$guideId',
  getParentRoute: () => rootRoute,
} as any)

const ObserverGuidesEditGuideIdRoute = ObserverGuidesEditGuideIdImport.update({
  id: '/observer-guides/edit/$guideId',
  path: '/observer-guides/edit/$guideId',
  getParentRoute: () => rootRoute,
} as any)

const MonitoringObserversPushMessagesIdRoute =
  MonitoringObserversPushMessagesIdImport.update({
    id: '/monitoring-observers/push-messages/$id',
    path: '/monitoring-observers/push-messages/$id',
    getParentRoute: () => rootRoute,
  } as any)

const MonitoringObserversEditMonitoringObserverIdRoute =
  MonitoringObserversEditMonitoringObserverIdImport.update({
    id: '/monitoring-observers/edit/$monitoringObserverId',
    path: '/monitoring-observers/edit/$monitoringObserverId',
    getParentRoute: () => rootRoute,
  } as any)

const FormsNewTemplateRoute = FormsNewTemplateImport.update({
  id: '/forms/new_/template',
  path: '/forms/new/template',
  getParentRoute: () => rootRoute,
} as any)

const FormsNewScratchRoute = FormsNewScratchImport.update({
  id: '/forms/new_/scratch',
  path: '/forms/new/scratch',
  getParentRoute: () => rootRoute,
} as any)

const FormsNewReuseRoute = FormsNewReuseImport.update({
  id: '/forms/new_/reuse',
  path: '/forms/new/reuse',
  getParentRoute: () => rootRoute,
} as any)

const FormsFormIdEditRoute = FormsFormIdEditImport.update({
  id: '/forms/$formId_/edit',
  path: '/forms/$formId/edit',
  getParentRoute: () => rootRoute,
} as any)

const FormsFormIdLanguageCodeRoute = FormsFormIdLanguageCodeImport.update({
  id: '/forms/$formId_/$languageCode',
  path: '/forms/$formId/$languageCode',
  getParentRoute: () => rootRoute,
} as any)

const FormTemplatesFormTemplateIdEditRoute =
  FormTemplatesFormTemplateIdEditImport.update({
    id: '/form-templates/$formTemplateId_/edit',
    path: '/form-templates/$formTemplateId/edit',
    getParentRoute: () => rootRoute,
  } as any)

const FormTemplatesFormTemplateIdLanguageCodeRoute =
  FormTemplatesFormTemplateIdLanguageCodeImport.update({
    id: '/form-templates/$formTemplateId_/$languageCode',
    path: '/form-templates/$formTemplateId/$languageCode',
    getParentRoute: () => rootRoute,
  } as any)

const ElectionRoundsElectionRoundIdEditRoute =
  ElectionRoundsElectionRoundIdEditImport.update({
    id: '/election-rounds/$electionRoundId/edit',
    path: '/election-rounds/$electionRoundId/edit',
    getParentRoute: () => rootRoute,
  } as any)

const ElectionRoundsElectionRoundIdTabRoute =
  ElectionRoundsElectionRoundIdTabImport.update({
    id: '/election-rounds/$electionRoundId/$tab',
    path: '/election-rounds/$electionRoundId/$tab',
    getParentRoute: () => rootRoute,
  } as any)

const CitizenNotificationsViewNotificationIdRoute =
  CitizenNotificationsViewNotificationIdImport.update({
    id: '/citizen-notifications/view/$notificationId',
    path: '/citizen-notifications/view/$notificationId',
    getParentRoute: () => rootRoute,
  } as any)

const CitizenGuidesViewGuideIdRoute = CitizenGuidesViewGuideIdImport.update({
  id: '/citizen-guides/view/$guideId',
  path: '/citizen-guides/view/$guideId',
  getParentRoute: () => rootRoute,
} as any)

const CitizenGuidesEditGuideIdRoute = CitizenGuidesEditGuideIdImport.update({
  id: '/citizen-guides/edit/$guideId',
  path: '/citizen-guides/edit/$guideId',
  getParentRoute: () => rootRoute,
} as any)

const ResponsesIncidentReportsFormIdAggregatedRoute =
  ResponsesIncidentReportsFormIdAggregatedImport.update({
    id: '/responses/incident-reports/$formId/aggregated',
    path: '/responses/incident-reports/$formId/aggregated',
    getParentRoute: () => rootRoute,
  } as any)

const ResponsesFormSubmissionsFormIdAggregatedRoute =
  ResponsesFormSubmissionsFormIdAggregatedImport.update({
    id: '/responses/form-submissions/$formId/aggregated',
    path: '/responses/form-submissions/$formId/aggregated',
    getParentRoute: () => rootRoute,
  } as any)

const ResponsesCitizenReportsFormIdAggregatedRoute =
  ResponsesCitizenReportsFormIdAggregatedImport.update({
    id: '/responses/citizen-reports/$formId/aggregated',
    path: '/responses/citizen-reports/$formId/aggregated',
    getParentRoute: () => rootRoute,
  } as any)

const MonitoringObserversViewMonitoringObserverIdTabRoute =
  MonitoringObserversViewMonitoringObserverIdTabImport.update({
    id: '/monitoring-observers/view/$monitoringObserverId/$tab',
    path: '/monitoring-observers/view/$monitoringObserverId/$tab',
    getParentRoute: () => rootRoute,
  } as any)

const MonitoringObserversPushMessagesIdViewRoute =
  MonitoringObserversPushMessagesIdViewImport.update({
    id: '/monitoring-observers/push-messages/$id_/view',
    path: '/monitoring-observers/push-messages/$id/view',
    getParentRoute: () => rootRoute,
  } as any)

const FormsFormIdEditTranslationLanguageCodeRoute =
  FormsFormIdEditTranslationLanguageCodeImport.update({
    id: '/forms/$formId_/edit-translation/$languageCode',
    path: '/forms/$formId/edit-translation/$languageCode',
    getParentRoute: () => rootRoute,
  } as any)

const FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute =
  FormTemplatesFormTemplateIdEditTranslationLanguageCodeImport.update({
    id: '/form-templates/$formTemplateId_/edit-translation/$languageCode',
    path: '/form-templates/$formTemplateId/edit-translation/$languageCode',
    getParentRoute: () => rootRoute,
  } as any)

const ElectionRoundsElectionRoundIdPollingStationsImportRoute =
  ElectionRoundsElectionRoundIdPollingStationsImportImport.update({
    id: '/election-rounds/$electionRoundId/polling-stations/import',
    path: '/election-rounds/$electionRoundId/polling-stations/import',
    getParentRoute: () => rootRoute,
  } as any)

const ElectionRoundsElectionRoundIdLocationsImportRoute =
  ElectionRoundsElectionRoundIdLocationsImportImport.update({
    id: '/election-rounds/$electionRoundId/locations/import',
    path: '/election-rounds/$electionRoundId/locations/import',
    getParentRoute: () => rootRoute,
  } as any)

const CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute =
  CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdImport.update(
    {
      id: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId',
      path: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId',
      getParentRoute: () => rootRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/accept-invite/success': {
      id: '/accept-invite/success'
      path: '/accept-invite/success'
      fullPath: '/accept-invite/success'
      preLoaderRoute: typeof AcceptInviteSuccessImport
      parentRoute: typeof rootRoute
    }
    '/citizen-guides/new': {
      id: '/citizen-guides/new'
      path: '/citizen-guides/new'
      fullPath: '/citizen-guides/new'
      preLoaderRoute: typeof CitizenGuidesNewImport
      parentRoute: typeof rootRoute
    }
    '/citizen-notifications/new': {
      id: '/citizen-notifications/new'
      path: '/citizen-notifications/new'
      fullPath: '/citizen-notifications/new'
      preLoaderRoute: typeof CitizenNotificationsNewImport
      parentRoute: typeof rootRoute
    }
    '/election-event/$tab': {
      id: '/election-event/$tab'
      path: '/election-event/$tab'
      fullPath: '/election-event/$tab'
      preLoaderRoute: typeof ElectionEventTabImport
      parentRoute: typeof rootRoute
    }
    '/form-templates/$formTemplateId': {
      id: '/form-templates/$formTemplateId'
      path: '/form-templates/$formTemplateId'
      fullPath: '/form-templates/$formTemplateId'
      preLoaderRoute: typeof FormTemplatesFormTemplateIdImport
      parentRoute: typeof rootRoute
    }
    '/form-templates/new': {
      id: '/form-templates/new'
      path: '/form-templates/new'
      fullPath: '/form-templates/new'
      preLoaderRoute: typeof FormTemplatesNewImport
      parentRoute: typeof rootRoute
    }
    '/forms/$formId': {
      id: '/forms/$formId'
      path: '/forms/$formId'
      fullPath: '/forms/$formId'
      preLoaderRoute: typeof FormsFormIdImport
      parentRoute: typeof rootRoute
    }
    '/forms/new': {
      id: '/forms/new'
      path: '/forms/new'
      fullPath: '/forms/new'
      preLoaderRoute: typeof FormsNewImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/$tab': {
      id: '/monitoring-observers/$tab'
      path: '/monitoring-observers/$tab'
      fullPath: '/monitoring-observers/$tab'
      preLoaderRoute: typeof MonitoringObserversTabImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/create-new-message': {
      id: '/monitoring-observers/create-new-message'
      path: '/monitoring-observers/create-new-message'
      fullPath: '/monitoring-observers/create-new-message'
      preLoaderRoute: typeof MonitoringObserversCreateNewMessageImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/import': {
      id: '/monitoring-observers/import'
      path: '/monitoring-observers/import'
      fullPath: '/monitoring-observers/import'
      preLoaderRoute: typeof MonitoringObserversImportImport
      parentRoute: typeof rootRoute
    }
    '/ngos/$ngoId': {
      id: '/ngos/$ngoId'
      path: '/ngos/$ngoId'
      fullPath: '/ngos/$ngoId'
      preLoaderRoute: typeof NgosNgoIdImport
      parentRoute: typeof rootRoute
    }
    '/observer-guides/new': {
      id: '/observer-guides/new'
      path: '/observer-guides/new'
      fullPath: '/observer-guides/new'
      preLoaderRoute: typeof ObserverGuidesNewImport
      parentRoute: typeof rootRoute
    }
    '/observers/$observerId': {
      id: '/observers/$observerId'
      path: '/observers/$observerId'
      fullPath: '/observers/$observerId'
      preLoaderRoute: typeof ObserversObserverIdImport
      parentRoute: typeof rootRoute
    }
    '/reset-password/success': {
      id: '/reset-password/success'
      path: '/reset-password/success'
      fullPath: '/reset-password/success'
      preLoaderRoute: typeof ResetPasswordSuccessImport
      parentRoute: typeof rootRoute
    }
    '/accept-invite/': {
      id: '/accept-invite/'
      path: '/accept-invite'
      fullPath: '/accept-invite'
      preLoaderRoute: typeof AcceptInviteIndexImport
      parentRoute: typeof rootRoute
    }
    '/election-event/': {
      id: '/election-event/'
      path: '/election-event'
      fullPath: '/election-event'
      preLoaderRoute: typeof ElectionEventIndexImport
      parentRoute: typeof rootRoute
    }
    '/election-rounds/': {
      id: '/election-rounds/'
      path: '/election-rounds'
      fullPath: '/election-rounds'
      preLoaderRoute: typeof ElectionRoundsIndexImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password/': {
      id: '/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/form-templates/': {
      id: '/form-templates/'
      path: '/form-templates'
      fullPath: '/form-templates'
      preLoaderRoute: typeof FormTemplatesIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/': {
      id: '/monitoring-observers/'
      path: '/monitoring-observers'
      fullPath: '/monitoring-observers'
      preLoaderRoute: typeof MonitoringObserversIndexImport
      parentRoute: typeof rootRoute
    }
    '/ngos/': {
      id: '/ngos/'
      path: '/ngos'
      fullPath: '/ngos'
      preLoaderRoute: typeof NgosIndexImport
      parentRoute: typeof rootRoute
    }
    '/observers/': {
      id: '/observers/'
      path: '/observers'
      fullPath: '/observers'
      preLoaderRoute: typeof ObserversIndexImport
      parentRoute: typeof rootRoute
    }
    '/reset-password/': {
      id: '/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/responses/': {
      id: '/responses/'
      path: '/responses'
      fullPath: '/responses'
      preLoaderRoute: typeof ResponsesIndexImport
      parentRoute: typeof rootRoute
    }
    '/citizen-guides/edit/$guideId': {
      id: '/citizen-guides/edit/$guideId'
      path: '/citizen-guides/edit/$guideId'
      fullPath: '/citizen-guides/edit/$guideId'
      preLoaderRoute: typeof CitizenGuidesEditGuideIdImport
      parentRoute: typeof rootRoute
    }
    '/citizen-guides/view/$guideId': {
      id: '/citizen-guides/view/$guideId'
      path: '/citizen-guides/view/$guideId'
      fullPath: '/citizen-guides/view/$guideId'
      preLoaderRoute: typeof CitizenGuidesViewGuideIdImport
      parentRoute: typeof rootRoute
    }
    '/citizen-notifications/view/$notificationId': {
      id: '/citizen-notifications/view/$notificationId'
      path: '/citizen-notifications/view/$notificationId'
      fullPath: '/citizen-notifications/view/$notificationId'
      preLoaderRoute: typeof CitizenNotificationsViewNotificationIdImport
      parentRoute: typeof rootRoute
    }
    '/election-rounds/$electionRoundId/$tab': {
      id: '/election-rounds/$electionRoundId/$tab'
      path: '/election-rounds/$electionRoundId/$tab'
      fullPath: '/election-rounds/$electionRoundId/$tab'
      preLoaderRoute: typeof ElectionRoundsElectionRoundIdTabImport
      parentRoute: typeof rootRoute
    }
    '/election-rounds/$electionRoundId/edit': {
      id: '/election-rounds/$electionRoundId/edit'
      path: '/election-rounds/$electionRoundId/edit'
      fullPath: '/election-rounds/$electionRoundId/edit'
      preLoaderRoute: typeof ElectionRoundsElectionRoundIdEditImport
      parentRoute: typeof rootRoute
    }
    '/form-templates/$formTemplateId_/$languageCode': {
      id: '/form-templates/$formTemplateId_/$languageCode'
      path: '/form-templates/$formTemplateId/$languageCode'
      fullPath: '/form-templates/$formTemplateId/$languageCode'
      preLoaderRoute: typeof FormTemplatesFormTemplateIdLanguageCodeImport
      parentRoute: typeof rootRoute
    }
    '/form-templates/$formTemplateId_/edit': {
      id: '/form-templates/$formTemplateId_/edit'
      path: '/form-templates/$formTemplateId/edit'
      fullPath: '/form-templates/$formTemplateId/edit'
      preLoaderRoute: typeof FormTemplatesFormTemplateIdEditImport
      parentRoute: typeof rootRoute
    }
    '/forms/$formId_/$languageCode': {
      id: '/forms/$formId_/$languageCode'
      path: '/forms/$formId/$languageCode'
      fullPath: '/forms/$formId/$languageCode'
      preLoaderRoute: typeof FormsFormIdLanguageCodeImport
      parentRoute: typeof rootRoute
    }
    '/forms/$formId_/edit': {
      id: '/forms/$formId_/edit'
      path: '/forms/$formId/edit'
      fullPath: '/forms/$formId/edit'
      preLoaderRoute: typeof FormsFormIdEditImport
      parentRoute: typeof rootRoute
    }
    '/forms/new_/reuse': {
      id: '/forms/new_/reuse'
      path: '/forms/new/reuse'
      fullPath: '/forms/new/reuse'
      preLoaderRoute: typeof FormsNewReuseImport
      parentRoute: typeof rootRoute
    }
    '/forms/new_/scratch': {
      id: '/forms/new_/scratch'
      path: '/forms/new/scratch'
      fullPath: '/forms/new/scratch'
      preLoaderRoute: typeof FormsNewScratchImport
      parentRoute: typeof rootRoute
    }
    '/forms/new_/template': {
      id: '/forms/new_/template'
      path: '/forms/new/template'
      fullPath: '/forms/new/template'
      preLoaderRoute: typeof FormsNewTemplateImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/edit/$monitoringObserverId': {
      id: '/monitoring-observers/edit/$monitoringObserverId'
      path: '/monitoring-observers/edit/$monitoringObserverId'
      fullPath: '/monitoring-observers/edit/$monitoringObserverId'
      preLoaderRoute: typeof MonitoringObserversEditMonitoringObserverIdImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/push-messages/$id': {
      id: '/monitoring-observers/push-messages/$id'
      path: '/monitoring-observers/push-messages/$id'
      fullPath: '/monitoring-observers/push-messages/$id'
      preLoaderRoute: typeof MonitoringObserversPushMessagesIdImport
      parentRoute: typeof rootRoute
    }
    '/observer-guides/edit/$guideId': {
      id: '/observer-guides/edit/$guideId'
      path: '/observer-guides/edit/$guideId'
      fullPath: '/observer-guides/edit/$guideId'
      preLoaderRoute: typeof ObserverGuidesEditGuideIdImport
      parentRoute: typeof rootRoute
    }
    '/observer-guides/view/$guideId': {
      id: '/observer-guides/view/$guideId'
      path: '/observer-guides/view/$guideId'
      fullPath: '/observer-guides/view/$guideId'
      preLoaderRoute: typeof ObserverGuidesViewGuideIdImport
      parentRoute: typeof rootRoute
    }
    '/observers_/$observerId/edit': {
      id: '/observers_/$observerId/edit'
      path: '/observers/$observerId/edit'
      fullPath: '/observers/$observerId/edit'
      preLoaderRoute: typeof ObserversObserverIdEditImport
      parentRoute: typeof rootRoute
    }
    '/responses/citizen-reports/$citizenReportId': {
      id: '/responses/citizen-reports/$citizenReportId'
      path: '/responses/citizen-reports/$citizenReportId'
      fullPath: '/responses/citizen-reports/$citizenReportId'
      preLoaderRoute: typeof ResponsesCitizenReportsCitizenReportIdImport
      parentRoute: typeof rootRoute
    }
    '/responses/form-submissions/$submissionId': {
      id: '/responses/form-submissions/$submissionId'
      path: '/responses/form-submissions/$submissionId'
      fullPath: '/responses/form-submissions/$submissionId'
      preLoaderRoute: typeof ResponsesFormSubmissionsSubmissionIdImport
      parentRoute: typeof rootRoute
    }
    '/responses/incident-reports/$incidentReportId': {
      id: '/responses/incident-reports/$incidentReportId'
      path: '/responses/incident-reports/$incidentReportId'
      fullPath: '/responses/incident-reports/$incidentReportId'
      preLoaderRoute: typeof ResponsesIncidentReportsIncidentReportIdImport
      parentRoute: typeof rootRoute
    }
    '/responses/quick-reports/$quickReportId': {
      id: '/responses/quick-reports/$quickReportId'
      path: '/responses/quick-reports/$quickReportId'
      fullPath: '/responses/quick-reports/$quickReportId'
      preLoaderRoute: typeof ResponsesQuickReportsQuickReportIdImport
      parentRoute: typeof rootRoute
    }
    '/election-rounds/$electionRoundId/': {
      id: '/election-rounds/$electionRoundId/'
      path: '/election-rounds/$electionRoundId'
      fullPath: '/election-rounds/$electionRoundId'
      preLoaderRoute: typeof ElectionRoundsElectionRoundIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': {
      id: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
      path: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
      fullPath: '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
      preLoaderRoute: typeof CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdImport
      parentRoute: typeof rootRoute
    }
    '/election-rounds/$electionRoundId/locations/import': {
      id: '/election-rounds/$electionRoundId/locations/import'
      path: '/election-rounds/$electionRoundId/locations/import'
      fullPath: '/election-rounds/$electionRoundId/locations/import'
      preLoaderRoute: typeof ElectionRoundsElectionRoundIdLocationsImportImport
      parentRoute: typeof rootRoute
    }
    '/election-rounds/$electionRoundId/polling-stations/import': {
      id: '/election-rounds/$electionRoundId/polling-stations/import'
      path: '/election-rounds/$electionRoundId/polling-stations/import'
      fullPath: '/election-rounds/$electionRoundId/polling-stations/import'
      preLoaderRoute: typeof ElectionRoundsElectionRoundIdPollingStationsImportImport
      parentRoute: typeof rootRoute
    }
    '/form-templates/$formTemplateId_/edit-translation/$languageCode': {
      id: '/form-templates/$formTemplateId_/edit-translation/$languageCode'
      path: '/form-templates/$formTemplateId/edit-translation/$languageCode'
      fullPath: '/form-templates/$formTemplateId/edit-translation/$languageCode'
      preLoaderRoute: typeof FormTemplatesFormTemplateIdEditTranslationLanguageCodeImport
      parentRoute: typeof rootRoute
    }
    '/forms/$formId_/edit-translation/$languageCode': {
      id: '/forms/$formId_/edit-translation/$languageCode'
      path: '/forms/$formId/edit-translation/$languageCode'
      fullPath: '/forms/$formId/edit-translation/$languageCode'
      preLoaderRoute: typeof FormsFormIdEditTranslationLanguageCodeImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/push-messages/$id_/view': {
      id: '/monitoring-observers/push-messages/$id_/view'
      path: '/monitoring-observers/push-messages/$id/view'
      fullPath: '/monitoring-observers/push-messages/$id/view'
      preLoaderRoute: typeof MonitoringObserversPushMessagesIdViewImport
      parentRoute: typeof rootRoute
    }
    '/monitoring-observers/view/$monitoringObserverId/$tab': {
      id: '/monitoring-observers/view/$monitoringObserverId/$tab'
      path: '/monitoring-observers/view/$monitoringObserverId/$tab'
      fullPath: '/monitoring-observers/view/$monitoringObserverId/$tab'
      preLoaderRoute: typeof MonitoringObserversViewMonitoringObserverIdTabImport
      parentRoute: typeof rootRoute
    }
    '/responses/citizen-reports/$formId/aggregated': {
      id: '/responses/citizen-reports/$formId/aggregated'
      path: '/responses/citizen-reports/$formId/aggregated'
      fullPath: '/responses/citizen-reports/$formId/aggregated'
      preLoaderRoute: typeof ResponsesCitizenReportsFormIdAggregatedImport
      parentRoute: typeof rootRoute
    }
    '/responses/form-submissions/$formId/aggregated': {
      id: '/responses/form-submissions/$formId/aggregated'
      path: '/responses/form-submissions/$formId/aggregated'
      fullPath: '/responses/form-submissions/$formId/aggregated'
      preLoaderRoute: typeof ResponsesFormSubmissionsFormIdAggregatedImport
      parentRoute: typeof rootRoute
    }
    '/responses/incident-reports/$formId/aggregated': {
      id: '/responses/incident-reports/$formId/aggregated'
      path: '/responses/incident-reports/$formId/aggregated'
      fullPath: '/responses/incident-reports/$formId/aggregated'
      preLoaderRoute: typeof ResponsesIncidentReportsFormIdAggregatedImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/accept-invite/success': typeof AcceptInviteSuccessRoute
  '/citizen-guides/new': typeof CitizenGuidesNewRoute
  '/citizen-notifications/new': typeof CitizenNotificationsNewRoute
  '/election-event/$tab': typeof ElectionEventTabRoute
  '/form-templates/$formTemplateId': typeof FormTemplatesFormTemplateIdRoute
  '/form-templates/new': typeof FormTemplatesNewRoute
  '/forms/$formId': typeof FormsFormIdRoute
  '/forms/new': typeof FormsNewRoute
  '/monitoring-observers/$tab': typeof MonitoringObserversTabRoute
  '/monitoring-observers/create-new-message': typeof MonitoringObserversCreateNewMessageRoute
  '/monitoring-observers/import': typeof MonitoringObserversImportRoute
  '/ngos/$ngoId': typeof NgosNgoIdRoute
  '/observer-guides/new': typeof ObserverGuidesNewRoute
  '/observers/$observerId': typeof ObserversObserverIdRoute
  '/reset-password/success': typeof ResetPasswordSuccessRoute
  '/accept-invite': typeof AcceptInviteIndexRoute
  '/election-event': typeof ElectionEventIndexRoute
  '/election-rounds': typeof ElectionRoundsIndexRoute
  '/forgot-password': typeof ForgotPasswordIndexRoute
  '/form-templates': typeof FormTemplatesIndexRoute
  '/login': typeof LoginIndexRoute
  '/monitoring-observers': typeof MonitoringObserversIndexRoute
  '/ngos': typeof NgosIndexRoute
  '/observers': typeof ObserversIndexRoute
  '/reset-password': typeof ResetPasswordIndexRoute
  '/responses': typeof ResponsesIndexRoute
  '/citizen-guides/edit/$guideId': typeof CitizenGuidesEditGuideIdRoute
  '/citizen-guides/view/$guideId': typeof CitizenGuidesViewGuideIdRoute
  '/citizen-notifications/view/$notificationId': typeof CitizenNotificationsViewNotificationIdRoute
  '/election-rounds/$electionRoundId/$tab': typeof ElectionRoundsElectionRoundIdTabRoute
  '/election-rounds/$electionRoundId/edit': typeof ElectionRoundsElectionRoundIdEditRoute
  '/form-templates/$formTemplateId/$languageCode': typeof FormTemplatesFormTemplateIdLanguageCodeRoute
  '/form-templates/$formTemplateId/edit': typeof FormTemplatesFormTemplateIdEditRoute
  '/forms/$formId/$languageCode': typeof FormsFormIdLanguageCodeRoute
  '/forms/$formId/edit': typeof FormsFormIdEditRoute
  '/forms/new/reuse': typeof FormsNewReuseRoute
  '/forms/new/scratch': typeof FormsNewScratchRoute
  '/forms/new/template': typeof FormsNewTemplateRoute
  '/monitoring-observers/edit/$monitoringObserverId': typeof MonitoringObserversEditMonitoringObserverIdRoute
  '/monitoring-observers/push-messages/$id': typeof MonitoringObserversPushMessagesIdRoute
  '/observer-guides/edit/$guideId': typeof ObserverGuidesEditGuideIdRoute
  '/observer-guides/view/$guideId': typeof ObserverGuidesViewGuideIdRoute
  '/observers/$observerId/edit': typeof ObserversObserverIdEditRoute
  '/responses/citizen-reports/$citizenReportId': typeof ResponsesCitizenReportsCitizenReportIdRoute
  '/responses/form-submissions/$submissionId': typeof ResponsesFormSubmissionsSubmissionIdRoute
  '/responses/incident-reports/$incidentReportId': typeof ResponsesIncidentReportsIncidentReportIdRoute
  '/responses/quick-reports/$quickReportId': typeof ResponsesQuickReportsQuickReportIdRoute
  '/election-rounds/$electionRoundId': typeof ElectionRoundsElectionRoundIdIndexRoute
  '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': typeof CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  '/election-rounds/$electionRoundId/locations/import': typeof ElectionRoundsElectionRoundIdLocationsImportRoute
  '/election-rounds/$electionRoundId/polling-stations/import': typeof ElectionRoundsElectionRoundIdPollingStationsImportRoute
  '/form-templates/$formTemplateId/edit-translation/$languageCode': typeof FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  '/forms/$formId/edit-translation/$languageCode': typeof FormsFormIdEditTranslationLanguageCodeRoute
  '/monitoring-observers/push-messages/$id/view': typeof MonitoringObserversPushMessagesIdViewRoute
  '/monitoring-observers/view/$monitoringObserverId/$tab': typeof MonitoringObserversViewMonitoringObserverIdTabRoute
  '/responses/citizen-reports/$formId/aggregated': typeof ResponsesCitizenReportsFormIdAggregatedRoute
  '/responses/form-submissions/$formId/aggregated': typeof ResponsesFormSubmissionsFormIdAggregatedRoute
  '/responses/incident-reports/$formId/aggregated': typeof ResponsesIncidentReportsFormIdAggregatedRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/accept-invite/success': typeof AcceptInviteSuccessRoute
  '/citizen-guides/new': typeof CitizenGuidesNewRoute
  '/citizen-notifications/new': typeof CitizenNotificationsNewRoute
  '/election-event/$tab': typeof ElectionEventTabRoute
  '/form-templates/$formTemplateId': typeof FormTemplatesFormTemplateIdRoute
  '/form-templates/new': typeof FormTemplatesNewRoute
  '/forms/$formId': typeof FormsFormIdRoute
  '/forms/new': typeof FormsNewRoute
  '/monitoring-observers/$tab': typeof MonitoringObserversTabRoute
  '/monitoring-observers/create-new-message': typeof MonitoringObserversCreateNewMessageRoute
  '/monitoring-observers/import': typeof MonitoringObserversImportRoute
  '/ngos/$ngoId': typeof NgosNgoIdRoute
  '/observer-guides/new': typeof ObserverGuidesNewRoute
  '/observers/$observerId': typeof ObserversObserverIdRoute
  '/reset-password/success': typeof ResetPasswordSuccessRoute
  '/accept-invite': typeof AcceptInviteIndexRoute
  '/election-event': typeof ElectionEventIndexRoute
  '/election-rounds': typeof ElectionRoundsIndexRoute
  '/forgot-password': typeof ForgotPasswordIndexRoute
  '/form-templates': typeof FormTemplatesIndexRoute
  '/login': typeof LoginIndexRoute
  '/monitoring-observers': typeof MonitoringObserversIndexRoute
  '/ngos': typeof NgosIndexRoute
  '/observers': typeof ObserversIndexRoute
  '/reset-password': typeof ResetPasswordIndexRoute
  '/responses': typeof ResponsesIndexRoute
  '/citizen-guides/edit/$guideId': typeof CitizenGuidesEditGuideIdRoute
  '/citizen-guides/view/$guideId': typeof CitizenGuidesViewGuideIdRoute
  '/citizen-notifications/view/$notificationId': typeof CitizenNotificationsViewNotificationIdRoute
  '/election-rounds/$electionRoundId/$tab': typeof ElectionRoundsElectionRoundIdTabRoute
  '/election-rounds/$electionRoundId/edit': typeof ElectionRoundsElectionRoundIdEditRoute
  '/form-templates/$formTemplateId/$languageCode': typeof FormTemplatesFormTemplateIdLanguageCodeRoute
  '/form-templates/$formTemplateId/edit': typeof FormTemplatesFormTemplateIdEditRoute
  '/forms/$formId/$languageCode': typeof FormsFormIdLanguageCodeRoute
  '/forms/$formId/edit': typeof FormsFormIdEditRoute
  '/forms/new/reuse': typeof FormsNewReuseRoute
  '/forms/new/scratch': typeof FormsNewScratchRoute
  '/forms/new/template': typeof FormsNewTemplateRoute
  '/monitoring-observers/edit/$monitoringObserverId': typeof MonitoringObserversEditMonitoringObserverIdRoute
  '/monitoring-observers/push-messages/$id': typeof MonitoringObserversPushMessagesIdRoute
  '/observer-guides/edit/$guideId': typeof ObserverGuidesEditGuideIdRoute
  '/observer-guides/view/$guideId': typeof ObserverGuidesViewGuideIdRoute
  '/observers/$observerId/edit': typeof ObserversObserverIdEditRoute
  '/responses/citizen-reports/$citizenReportId': typeof ResponsesCitizenReportsCitizenReportIdRoute
  '/responses/form-submissions/$submissionId': typeof ResponsesFormSubmissionsSubmissionIdRoute
  '/responses/incident-reports/$incidentReportId': typeof ResponsesIncidentReportsIncidentReportIdRoute
  '/responses/quick-reports/$quickReportId': typeof ResponsesQuickReportsQuickReportIdRoute
  '/election-rounds/$electionRoundId': typeof ElectionRoundsElectionRoundIdIndexRoute
  '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': typeof CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  '/election-rounds/$electionRoundId/locations/import': typeof ElectionRoundsElectionRoundIdLocationsImportRoute
  '/election-rounds/$electionRoundId/polling-stations/import': typeof ElectionRoundsElectionRoundIdPollingStationsImportRoute
  '/form-templates/$formTemplateId/edit-translation/$languageCode': typeof FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  '/forms/$formId/edit-translation/$languageCode': typeof FormsFormIdEditTranslationLanguageCodeRoute
  '/monitoring-observers/push-messages/$id/view': typeof MonitoringObserversPushMessagesIdViewRoute
  '/monitoring-observers/view/$monitoringObserverId/$tab': typeof MonitoringObserversViewMonitoringObserverIdTabRoute
  '/responses/citizen-reports/$formId/aggregated': typeof ResponsesCitizenReportsFormIdAggregatedRoute
  '/responses/form-submissions/$formId/aggregated': typeof ResponsesFormSubmissionsFormIdAggregatedRoute
  '/responses/incident-reports/$formId/aggregated': typeof ResponsesIncidentReportsFormIdAggregatedRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/accept-invite/success': typeof AcceptInviteSuccessRoute
  '/citizen-guides/new': typeof CitizenGuidesNewRoute
  '/citizen-notifications/new': typeof CitizenNotificationsNewRoute
  '/election-event/$tab': typeof ElectionEventTabRoute
  '/form-templates/$formTemplateId': typeof FormTemplatesFormTemplateIdRoute
  '/form-templates/new': typeof FormTemplatesNewRoute
  '/forms/$formId': typeof FormsFormIdRoute
  '/forms/new': typeof FormsNewRoute
  '/monitoring-observers/$tab': typeof MonitoringObserversTabRoute
  '/monitoring-observers/create-new-message': typeof MonitoringObserversCreateNewMessageRoute
  '/monitoring-observers/import': typeof MonitoringObserversImportRoute
  '/ngos/$ngoId': typeof NgosNgoIdRoute
  '/observer-guides/new': typeof ObserverGuidesNewRoute
  '/observers/$observerId': typeof ObserversObserverIdRoute
  '/reset-password/success': typeof ResetPasswordSuccessRoute
  '/accept-invite/': typeof AcceptInviteIndexRoute
  '/election-event/': typeof ElectionEventIndexRoute
  '/election-rounds/': typeof ElectionRoundsIndexRoute
  '/forgot-password/': typeof ForgotPasswordIndexRoute
  '/form-templates/': typeof FormTemplatesIndexRoute
  '/login/': typeof LoginIndexRoute
  '/monitoring-observers/': typeof MonitoringObserversIndexRoute
  '/ngos/': typeof NgosIndexRoute
  '/observers/': typeof ObserversIndexRoute
  '/reset-password/': typeof ResetPasswordIndexRoute
  '/responses/': typeof ResponsesIndexRoute
  '/citizen-guides/edit/$guideId': typeof CitizenGuidesEditGuideIdRoute
  '/citizen-guides/view/$guideId': typeof CitizenGuidesViewGuideIdRoute
  '/citizen-notifications/view/$notificationId': typeof CitizenNotificationsViewNotificationIdRoute
  '/election-rounds/$electionRoundId/$tab': typeof ElectionRoundsElectionRoundIdTabRoute
  '/election-rounds/$electionRoundId/edit': typeof ElectionRoundsElectionRoundIdEditRoute
  '/form-templates/$formTemplateId_/$languageCode': typeof FormTemplatesFormTemplateIdLanguageCodeRoute
  '/form-templates/$formTemplateId_/edit': typeof FormTemplatesFormTemplateIdEditRoute
  '/forms/$formId_/$languageCode': typeof FormsFormIdLanguageCodeRoute
  '/forms/$formId_/edit': typeof FormsFormIdEditRoute
  '/forms/new_/reuse': typeof FormsNewReuseRoute
  '/forms/new_/scratch': typeof FormsNewScratchRoute
  '/forms/new_/template': typeof FormsNewTemplateRoute
  '/monitoring-observers/edit/$monitoringObserverId': typeof MonitoringObserversEditMonitoringObserverIdRoute
  '/monitoring-observers/push-messages/$id': typeof MonitoringObserversPushMessagesIdRoute
  '/observer-guides/edit/$guideId': typeof ObserverGuidesEditGuideIdRoute
  '/observer-guides/view/$guideId': typeof ObserverGuidesViewGuideIdRoute
  '/observers_/$observerId/edit': typeof ObserversObserverIdEditRoute
  '/responses/citizen-reports/$citizenReportId': typeof ResponsesCitizenReportsCitizenReportIdRoute
  '/responses/form-submissions/$submissionId': typeof ResponsesFormSubmissionsSubmissionIdRoute
  '/responses/incident-reports/$incidentReportId': typeof ResponsesIncidentReportsIncidentReportIdRoute
  '/responses/quick-reports/$quickReportId': typeof ResponsesQuickReportsQuickReportIdRoute
  '/election-rounds/$electionRoundId/': typeof ElectionRoundsElectionRoundIdIndexRoute
  '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId': typeof CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  '/election-rounds/$electionRoundId/locations/import': typeof ElectionRoundsElectionRoundIdLocationsImportRoute
  '/election-rounds/$electionRoundId/polling-stations/import': typeof ElectionRoundsElectionRoundIdPollingStationsImportRoute
  '/form-templates/$formTemplateId_/edit-translation/$languageCode': typeof FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  '/forms/$formId_/edit-translation/$languageCode': typeof FormsFormIdEditTranslationLanguageCodeRoute
  '/monitoring-observers/push-messages/$id_/view': typeof MonitoringObserversPushMessagesIdViewRoute
  '/monitoring-observers/view/$monitoringObserverId/$tab': typeof MonitoringObserversViewMonitoringObserverIdTabRoute
  '/responses/citizen-reports/$formId/aggregated': typeof ResponsesCitizenReportsFormIdAggregatedRoute
  '/responses/form-submissions/$formId/aggregated': typeof ResponsesFormSubmissionsFormIdAggregatedRoute
  '/responses/incident-reports/$formId/aggregated': typeof ResponsesIncidentReportsFormIdAggregatedRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/accept-invite/success'
    | '/citizen-guides/new'
    | '/citizen-notifications/new'
    | '/election-event/$tab'
    | '/form-templates/$formTemplateId'
    | '/form-templates/new'
    | '/forms/$formId'
    | '/forms/new'
    | '/monitoring-observers/$tab'
    | '/monitoring-observers/create-new-message'
    | '/monitoring-observers/import'
    | '/ngos/$ngoId'
    | '/observer-guides/new'
    | '/observers/$observerId'
    | '/reset-password/success'
    | '/accept-invite'
    | '/election-event'
    | '/election-rounds'
    | '/forgot-password'
    | '/form-templates'
    | '/login'
    | '/monitoring-observers'
    | '/ngos'
    | '/observers'
    | '/reset-password'
    | '/responses'
    | '/citizen-guides/edit/$guideId'
    | '/citizen-guides/view/$guideId'
    | '/citizen-notifications/view/$notificationId'
    | '/election-rounds/$electionRoundId/$tab'
    | '/election-rounds/$electionRoundId/edit'
    | '/form-templates/$formTemplateId/$languageCode'
    | '/form-templates/$formTemplateId/edit'
    | '/forms/$formId/$languageCode'
    | '/forms/$formId/edit'
    | '/forms/new/reuse'
    | '/forms/new/scratch'
    | '/forms/new/template'
    | '/monitoring-observers/edit/$monitoringObserverId'
    | '/monitoring-observers/push-messages/$id'
    | '/observer-guides/edit/$guideId'
    | '/observer-guides/view/$guideId'
    | '/observers/$observerId/edit'
    | '/responses/citizen-reports/$citizenReportId'
    | '/responses/form-submissions/$submissionId'
    | '/responses/incident-reports/$incidentReportId'
    | '/responses/quick-reports/$quickReportId'
    | '/election-rounds/$electionRoundId'
    | '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
    | '/election-rounds/$electionRoundId/locations/import'
    | '/election-rounds/$electionRoundId/polling-stations/import'
    | '/form-templates/$formTemplateId/edit-translation/$languageCode'
    | '/forms/$formId/edit-translation/$languageCode'
    | '/monitoring-observers/push-messages/$id/view'
    | '/monitoring-observers/view/$monitoringObserverId/$tab'
    | '/responses/citizen-reports/$formId/aggregated'
    | '/responses/form-submissions/$formId/aggregated'
    | '/responses/incident-reports/$formId/aggregated'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/accept-invite/success'
    | '/citizen-guides/new'
    | '/citizen-notifications/new'
    | '/election-event/$tab'
    | '/form-templates/$formTemplateId'
    | '/form-templates/new'
    | '/forms/$formId'
    | '/forms/new'
    | '/monitoring-observers/$tab'
    | '/monitoring-observers/create-new-message'
    | '/monitoring-observers/import'
    | '/ngos/$ngoId'
    | '/observer-guides/new'
    | '/observers/$observerId'
    | '/reset-password/success'
    | '/accept-invite'
    | '/election-event'
    | '/election-rounds'
    | '/forgot-password'
    | '/form-templates'
    | '/login'
    | '/monitoring-observers'
    | '/ngos'
    | '/observers'
    | '/reset-password'
    | '/responses'
    | '/citizen-guides/edit/$guideId'
    | '/citizen-guides/view/$guideId'
    | '/citizen-notifications/view/$notificationId'
    | '/election-rounds/$electionRoundId/$tab'
    | '/election-rounds/$electionRoundId/edit'
    | '/form-templates/$formTemplateId/$languageCode'
    | '/form-templates/$formTemplateId/edit'
    | '/forms/$formId/$languageCode'
    | '/forms/$formId/edit'
    | '/forms/new/reuse'
    | '/forms/new/scratch'
    | '/forms/new/template'
    | '/monitoring-observers/edit/$monitoringObserverId'
    | '/monitoring-observers/push-messages/$id'
    | '/observer-guides/edit/$guideId'
    | '/observer-guides/view/$guideId'
    | '/observers/$observerId/edit'
    | '/responses/citizen-reports/$citizenReportId'
    | '/responses/form-submissions/$submissionId'
    | '/responses/incident-reports/$incidentReportId'
    | '/responses/quick-reports/$quickReportId'
    | '/election-rounds/$electionRoundId'
    | '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
    | '/election-rounds/$electionRoundId/locations/import'
    | '/election-rounds/$electionRoundId/polling-stations/import'
    | '/form-templates/$formTemplateId/edit-translation/$languageCode'
    | '/forms/$formId/edit-translation/$languageCode'
    | '/monitoring-observers/push-messages/$id/view'
    | '/monitoring-observers/view/$monitoringObserverId/$tab'
    | '/responses/citizen-reports/$formId/aggregated'
    | '/responses/form-submissions/$formId/aggregated'
    | '/responses/incident-reports/$formId/aggregated'
  id:
    | '__root__'
    | '/'
    | '/accept-invite/success'
    | '/citizen-guides/new'
    | '/citizen-notifications/new'
    | '/election-event/$tab'
    | '/form-templates/$formTemplateId'
    | '/form-templates/new'
    | '/forms/$formId'
    | '/forms/new'
    | '/monitoring-observers/$tab'
    | '/monitoring-observers/create-new-message'
    | '/monitoring-observers/import'
    | '/ngos/$ngoId'
    | '/observer-guides/new'
    | '/observers/$observerId'
    | '/reset-password/success'
    | '/accept-invite/'
    | '/election-event/'
    | '/election-rounds/'
    | '/forgot-password/'
    | '/form-templates/'
    | '/login/'
    | '/monitoring-observers/'
    | '/ngos/'
    | '/observers/'
    | '/reset-password/'
    | '/responses/'
    | '/citizen-guides/edit/$guideId'
    | '/citizen-guides/view/$guideId'
    | '/citizen-notifications/view/$notificationId'
    | '/election-rounds/$electionRoundId/$tab'
    | '/election-rounds/$electionRoundId/edit'
    | '/form-templates/$formTemplateId_/$languageCode'
    | '/form-templates/$formTemplateId_/edit'
    | '/forms/$formId_/$languageCode'
    | '/forms/$formId_/edit'
    | '/forms/new_/reuse'
    | '/forms/new_/scratch'
    | '/forms/new_/template'
    | '/monitoring-observers/edit/$monitoringObserverId'
    | '/monitoring-observers/push-messages/$id'
    | '/observer-guides/edit/$guideId'
    | '/observer-guides/view/$guideId'
    | '/observers_/$observerId/edit'
    | '/responses/citizen-reports/$citizenReportId'
    | '/responses/form-submissions/$submissionId'
    | '/responses/incident-reports/$incidentReportId'
    | '/responses/quick-reports/$quickReportId'
    | '/election-rounds/$electionRoundId/'
    | '/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId'
    | '/election-rounds/$electionRoundId/locations/import'
    | '/election-rounds/$electionRoundId/polling-stations/import'
    | '/form-templates/$formTemplateId_/edit-translation/$languageCode'
    | '/forms/$formId_/edit-translation/$languageCode'
    | '/monitoring-observers/push-messages/$id_/view'
    | '/monitoring-observers/view/$monitoringObserverId/$tab'
    | '/responses/citizen-reports/$formId/aggregated'
    | '/responses/form-submissions/$formId/aggregated'
    | '/responses/incident-reports/$formId/aggregated'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AcceptInviteSuccessRoute: typeof AcceptInviteSuccessRoute
  CitizenGuidesNewRoute: typeof CitizenGuidesNewRoute
  CitizenNotificationsNewRoute: typeof CitizenNotificationsNewRoute
  ElectionEventTabRoute: typeof ElectionEventTabRoute
  FormTemplatesFormTemplateIdRoute: typeof FormTemplatesFormTemplateIdRoute
  FormTemplatesNewRoute: typeof FormTemplatesNewRoute
  FormsFormIdRoute: typeof FormsFormIdRoute
  FormsNewRoute: typeof FormsNewRoute
  MonitoringObserversTabRoute: typeof MonitoringObserversTabRoute
  MonitoringObserversCreateNewMessageRoute: typeof MonitoringObserversCreateNewMessageRoute
  MonitoringObserversImportRoute: typeof MonitoringObserversImportRoute
  NgosNgoIdRoute: typeof NgosNgoIdRoute
  ObserverGuidesNewRoute: typeof ObserverGuidesNewRoute
  ObserversObserverIdRoute: typeof ObserversObserverIdRoute
  ResetPasswordSuccessRoute: typeof ResetPasswordSuccessRoute
  AcceptInviteIndexRoute: typeof AcceptInviteIndexRoute
  ElectionEventIndexRoute: typeof ElectionEventIndexRoute
  ElectionRoundsIndexRoute: typeof ElectionRoundsIndexRoute
  ForgotPasswordIndexRoute: typeof ForgotPasswordIndexRoute
  FormTemplatesIndexRoute: typeof FormTemplatesIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  MonitoringObserversIndexRoute: typeof MonitoringObserversIndexRoute
  NgosIndexRoute: typeof NgosIndexRoute
  ObserversIndexRoute: typeof ObserversIndexRoute
  ResetPasswordIndexRoute: typeof ResetPasswordIndexRoute
  ResponsesIndexRoute: typeof ResponsesIndexRoute
  CitizenGuidesEditGuideIdRoute: typeof CitizenGuidesEditGuideIdRoute
  CitizenGuidesViewGuideIdRoute: typeof CitizenGuidesViewGuideIdRoute
  CitizenNotificationsViewNotificationIdRoute: typeof CitizenNotificationsViewNotificationIdRoute
  ElectionRoundsElectionRoundIdTabRoute: typeof ElectionRoundsElectionRoundIdTabRoute
  ElectionRoundsElectionRoundIdEditRoute: typeof ElectionRoundsElectionRoundIdEditRoute
  FormTemplatesFormTemplateIdLanguageCodeRoute: typeof FormTemplatesFormTemplateIdLanguageCodeRoute
  FormTemplatesFormTemplateIdEditRoute: typeof FormTemplatesFormTemplateIdEditRoute
  FormsFormIdLanguageCodeRoute: typeof FormsFormIdLanguageCodeRoute
  FormsFormIdEditRoute: typeof FormsFormIdEditRoute
  FormsNewReuseRoute: typeof FormsNewReuseRoute
  FormsNewScratchRoute: typeof FormsNewScratchRoute
  FormsNewTemplateRoute: typeof FormsNewTemplateRoute
  MonitoringObserversEditMonitoringObserverIdRoute: typeof MonitoringObserversEditMonitoringObserverIdRoute
  MonitoringObserversPushMessagesIdRoute: typeof MonitoringObserversPushMessagesIdRoute
  ObserverGuidesEditGuideIdRoute: typeof ObserverGuidesEditGuideIdRoute
  ObserverGuidesViewGuideIdRoute: typeof ObserverGuidesViewGuideIdRoute
  ObserversObserverIdEditRoute: typeof ObserversObserverIdEditRoute
  ResponsesCitizenReportsCitizenReportIdRoute: typeof ResponsesCitizenReportsCitizenReportIdRoute
  ResponsesFormSubmissionsSubmissionIdRoute: typeof ResponsesFormSubmissionsSubmissionIdRoute
  ResponsesIncidentReportsIncidentReportIdRoute: typeof ResponsesIncidentReportsIncidentReportIdRoute
  ResponsesQuickReportsQuickReportIdRoute: typeof ResponsesQuickReportsQuickReportIdRoute
  ElectionRoundsElectionRoundIdIndexRoute: typeof ElectionRoundsElectionRoundIdIndexRoute
  CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute: typeof CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute
  ElectionRoundsElectionRoundIdLocationsImportRoute: typeof ElectionRoundsElectionRoundIdLocationsImportRoute
  ElectionRoundsElectionRoundIdPollingStationsImportRoute: typeof ElectionRoundsElectionRoundIdPollingStationsImportRoute
  FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute: typeof FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute
  FormsFormIdEditTranslationLanguageCodeRoute: typeof FormsFormIdEditTranslationLanguageCodeRoute
  MonitoringObserversPushMessagesIdViewRoute: typeof MonitoringObserversPushMessagesIdViewRoute
  MonitoringObserversViewMonitoringObserverIdTabRoute: typeof MonitoringObserversViewMonitoringObserverIdTabRoute
  ResponsesCitizenReportsFormIdAggregatedRoute: typeof ResponsesCitizenReportsFormIdAggregatedRoute
  ResponsesFormSubmissionsFormIdAggregatedRoute: typeof ResponsesFormSubmissionsFormIdAggregatedRoute
  ResponsesIncidentReportsFormIdAggregatedRoute: typeof ResponsesIncidentReportsFormIdAggregatedRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AcceptInviteSuccessRoute: AcceptInviteSuccessRoute,
  CitizenGuidesNewRoute: CitizenGuidesNewRoute,
  CitizenNotificationsNewRoute: CitizenNotificationsNewRoute,
  ElectionEventTabRoute: ElectionEventTabRoute,
  FormTemplatesFormTemplateIdRoute: FormTemplatesFormTemplateIdRoute,
  FormTemplatesNewRoute: FormTemplatesNewRoute,
  FormsFormIdRoute: FormsFormIdRoute,
  FormsNewRoute: FormsNewRoute,
  MonitoringObserversTabRoute: MonitoringObserversTabRoute,
  MonitoringObserversCreateNewMessageRoute:
    MonitoringObserversCreateNewMessageRoute,
  MonitoringObserversImportRoute: MonitoringObserversImportRoute,
  NgosNgoIdRoute: NgosNgoIdRoute,
  ObserverGuidesNewRoute: ObserverGuidesNewRoute,
  ObserversObserverIdRoute: ObserversObserverIdRoute,
  ResetPasswordSuccessRoute: ResetPasswordSuccessRoute,
  AcceptInviteIndexRoute: AcceptInviteIndexRoute,
  ElectionEventIndexRoute: ElectionEventIndexRoute,
  ElectionRoundsIndexRoute: ElectionRoundsIndexRoute,
  ForgotPasswordIndexRoute: ForgotPasswordIndexRoute,
  FormTemplatesIndexRoute: FormTemplatesIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  MonitoringObserversIndexRoute: MonitoringObserversIndexRoute,
  NgosIndexRoute: NgosIndexRoute,
  ObserversIndexRoute: ObserversIndexRoute,
  ResetPasswordIndexRoute: ResetPasswordIndexRoute,
  ResponsesIndexRoute: ResponsesIndexRoute,
  CitizenGuidesEditGuideIdRoute: CitizenGuidesEditGuideIdRoute,
  CitizenGuidesViewGuideIdRoute: CitizenGuidesViewGuideIdRoute,
  CitizenNotificationsViewNotificationIdRoute:
    CitizenNotificationsViewNotificationIdRoute,
  ElectionRoundsElectionRoundIdTabRoute: ElectionRoundsElectionRoundIdTabRoute,
  ElectionRoundsElectionRoundIdEditRoute:
    ElectionRoundsElectionRoundIdEditRoute,
  FormTemplatesFormTemplateIdLanguageCodeRoute:
    FormTemplatesFormTemplateIdLanguageCodeRoute,
  FormTemplatesFormTemplateIdEditRoute: FormTemplatesFormTemplateIdEditRoute,
  FormsFormIdLanguageCodeRoute: FormsFormIdLanguageCodeRoute,
  FormsFormIdEditRoute: FormsFormIdEditRoute,
  FormsNewReuseRoute: FormsNewReuseRoute,
  FormsNewScratchRoute: FormsNewScratchRoute,
  FormsNewTemplateRoute: FormsNewTemplateRoute,
  MonitoringObserversEditMonitoringObserverIdRoute:
    MonitoringObserversEditMonitoringObserverIdRoute,
  MonitoringObserversPushMessagesIdRoute:
    MonitoringObserversPushMessagesIdRoute,
  ObserverGuidesEditGuideIdRoute: ObserverGuidesEditGuideIdRoute,
  ObserverGuidesViewGuideIdRoute: ObserverGuidesViewGuideIdRoute,
  ObserversObserverIdEditRoute: ObserversObserverIdEditRoute,
  ResponsesCitizenReportsCitizenReportIdRoute:
    ResponsesCitizenReportsCitizenReportIdRoute,
  ResponsesFormSubmissionsSubmissionIdRoute:
    ResponsesFormSubmissionsSubmissionIdRoute,
  ResponsesIncidentReportsIncidentReportIdRoute:
    ResponsesIncidentReportsIncidentReportIdRoute,
  ResponsesQuickReportsQuickReportIdRoute:
    ResponsesQuickReportsQuickReportIdRoute,
  ElectionRoundsElectionRoundIdIndexRoute:
    ElectionRoundsElectionRoundIdIndexRoute,
  CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute:
    CitizenReportAttachmentsElectionRoundIdCitizenReportIdAttachmentIdRoute,
  ElectionRoundsElectionRoundIdLocationsImportRoute:
    ElectionRoundsElectionRoundIdLocationsImportRoute,
  ElectionRoundsElectionRoundIdPollingStationsImportRoute:
    ElectionRoundsElectionRoundIdPollingStationsImportRoute,
  FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute:
    FormTemplatesFormTemplateIdEditTranslationLanguageCodeRoute,
  FormsFormIdEditTranslationLanguageCodeRoute:
    FormsFormIdEditTranslationLanguageCodeRoute,
  MonitoringObserversPushMessagesIdViewRoute:
    MonitoringObserversPushMessagesIdViewRoute,
  MonitoringObserversViewMonitoringObserverIdTabRoute:
    MonitoringObserversViewMonitoringObserverIdTabRoute,
  ResponsesCitizenReportsFormIdAggregatedRoute:
    ResponsesCitizenReportsFormIdAggregatedRoute,
  ResponsesFormSubmissionsFormIdAggregatedRoute:
    ResponsesFormSubmissionsFormIdAggregatedRoute,
  ResponsesIncidentReportsFormIdAggregatedRoute:
    ResponsesIncidentReportsFormIdAggregatedRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/accept-invite/success",
        "/citizen-guides/new",
        "/citizen-notifications/new",
        "/election-event/$tab",
        "/form-templates/$formTemplateId",
        "/form-templates/new",
        "/forms/$formId",
        "/forms/new",
        "/monitoring-observers/$tab",
        "/monitoring-observers/create-new-message",
        "/monitoring-observers/import",
        "/ngos/$ngoId",
        "/observer-guides/new",
        "/observers/$observerId",
        "/reset-password/success",
        "/accept-invite/",
        "/election-event/",
        "/election-rounds/",
        "/forgot-password/",
        "/form-templates/",
        "/login/",
        "/monitoring-observers/",
        "/ngos/",
        "/observers/",
        "/reset-password/",
        "/responses/",
        "/citizen-guides/edit/$guideId",
        "/citizen-guides/view/$guideId",
        "/citizen-notifications/view/$notificationId",
        "/election-rounds/$electionRoundId/$tab",
        "/election-rounds/$electionRoundId/edit",
        "/form-templates/$formTemplateId_/$languageCode",
        "/form-templates/$formTemplateId_/edit",
        "/forms/$formId_/$languageCode",
        "/forms/$formId_/edit",
        "/forms/new_/reuse",
        "/forms/new_/scratch",
        "/forms/new_/template",
        "/monitoring-observers/edit/$monitoringObserverId",
        "/monitoring-observers/push-messages/$id",
        "/observer-guides/edit/$guideId",
        "/observer-guides/view/$guideId",
        "/observers_/$observerId/edit",
        "/responses/citizen-reports/$citizenReportId",
        "/responses/form-submissions/$submissionId",
        "/responses/incident-reports/$incidentReportId",
        "/responses/quick-reports/$quickReportId",
        "/election-rounds/$electionRoundId/",
        "/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId",
        "/election-rounds/$electionRoundId/locations/import",
        "/election-rounds/$electionRoundId/polling-stations/import",
        "/form-templates/$formTemplateId_/edit-translation/$languageCode",
        "/forms/$formId_/edit-translation/$languageCode",
        "/monitoring-observers/push-messages/$id_/view",
        "/monitoring-observers/view/$monitoringObserverId/$tab",
        "/responses/citizen-reports/$formId/aggregated",
        "/responses/form-submissions/$formId/aggregated",
        "/responses/incident-reports/$formId/aggregated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/accept-invite/success": {
      "filePath": "accept-invite/success.tsx"
    },
    "/citizen-guides/new": {
      "filePath": "citizen-guides/new.tsx"
    },
    "/citizen-notifications/new": {
      "filePath": "citizen-notifications/new.tsx"
    },
    "/election-event/$tab": {
      "filePath": "election-event/$tab.tsx"
    },
    "/form-templates/$formTemplateId": {
      "filePath": "form-templates/$formTemplateId.tsx"
    },
    "/form-templates/new": {
      "filePath": "form-templates/new.tsx"
    },
    "/forms/$formId": {
      "filePath": "forms/$formId.tsx"
    },
    "/forms/new": {
      "filePath": "forms/new.tsx"
    },
    "/monitoring-observers/$tab": {
      "filePath": "monitoring-observers/$tab.tsx"
    },
    "/monitoring-observers/create-new-message": {
      "filePath": "monitoring-observers/create-new-message.tsx"
    },
    "/monitoring-observers/import": {
      "filePath": "monitoring-observers/import.tsx"
    },
    "/ngos/$ngoId": {
      "filePath": "ngos/$ngoId.tsx"
    },
    "/observer-guides/new": {
      "filePath": "observer-guides/new.tsx"
    },
    "/observers/$observerId": {
      "filePath": "observers/$observerId.tsx"
    },
    "/reset-password/success": {
      "filePath": "reset-password/success.tsx"
    },
    "/accept-invite/": {
      "filePath": "accept-invite/index.tsx"
    },
    "/election-event/": {
      "filePath": "election-event/index.tsx"
    },
    "/election-rounds/": {
      "filePath": "election-rounds/index.tsx"
    },
    "/forgot-password/": {
      "filePath": "forgot-password/index.tsx"
    },
    "/form-templates/": {
      "filePath": "form-templates/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/monitoring-observers/": {
      "filePath": "monitoring-observers/index.tsx"
    },
    "/ngos/": {
      "filePath": "ngos/index.tsx"
    },
    "/observers/": {
      "filePath": "observers/index.tsx"
    },
    "/reset-password/": {
      "filePath": "reset-password/index.tsx"
    },
    "/responses/": {
      "filePath": "responses/index.tsx"
    },
    "/citizen-guides/edit/$guideId": {
      "filePath": "citizen-guides/edit.$guideId.tsx"
    },
    "/citizen-guides/view/$guideId": {
      "filePath": "citizen-guides/view.$guideId.tsx"
    },
    "/citizen-notifications/view/$notificationId": {
      "filePath": "citizen-notifications/view.$notificationId.tsx"
    },
    "/election-rounds/$electionRoundId/$tab": {
      "filePath": "election-rounds/$electionRoundId/$tab.tsx"
    },
    "/election-rounds/$electionRoundId/edit": {
      "filePath": "election-rounds/$electionRoundId/edit.tsx"
    },
    "/form-templates/$formTemplateId_/$languageCode": {
      "filePath": "form-templates/$formTemplateId_.$languageCode.tsx"
    },
    "/form-templates/$formTemplateId_/edit": {
      "filePath": "form-templates/$formTemplateId_.edit.tsx"
    },
    "/forms/$formId_/$languageCode": {
      "filePath": "forms/$formId_.$languageCode.tsx"
    },
    "/forms/$formId_/edit": {
      "filePath": "forms/$formId_.edit.tsx"
    },
    "/forms/new_/reuse": {
      "filePath": "forms/new_.reuse.tsx"
    },
    "/forms/new_/scratch": {
      "filePath": "forms/new_.scratch.tsx"
    },
    "/forms/new_/template": {
      "filePath": "forms/new_.template.tsx"
    },
    "/monitoring-observers/edit/$monitoringObserverId": {
      "filePath": "monitoring-observers/edit.$monitoringObserverId.tsx"
    },
    "/monitoring-observers/push-messages/$id": {
      "filePath": "monitoring-observers/push-messages.$id.tsx"
    },
    "/observer-guides/edit/$guideId": {
      "filePath": "observer-guides/edit.$guideId.tsx"
    },
    "/observer-guides/view/$guideId": {
      "filePath": "observer-guides/view.$guideId.tsx"
    },
    "/observers_/$observerId/edit": {
      "filePath": "observers_.$observerId.edit.tsx"
    },
    "/responses/citizen-reports/$citizenReportId": {
      "filePath": "responses/citizen-reports/$citizenReportId.tsx"
    },
    "/responses/form-submissions/$submissionId": {
      "filePath": "responses/form-submissions/$submissionId.tsx"
    },
    "/responses/incident-reports/$incidentReportId": {
      "filePath": "responses/incident-reports/$incidentReportId.tsx"
    },
    "/responses/quick-reports/$quickReportId": {
      "filePath": "responses/quick-reports/$quickReportId.tsx"
    },
    "/election-rounds/$electionRoundId/": {
      "filePath": "election-rounds/$electionRoundId/index.tsx"
    },
    "/citizen-report-attachments/$electionRoundId/$citizenReportId/$attachmentId": {
      "filePath": "citizen-report-attachments/$electionRoundId.$citizenReportId.$attachmentId.tsx"
    },
    "/election-rounds/$electionRoundId/locations/import": {
      "filePath": "election-rounds/$electionRoundId/locations/import.tsx"
    },
    "/election-rounds/$electionRoundId/polling-stations/import": {
      "filePath": "election-rounds/$electionRoundId/polling-stations/import.tsx"
    },
    "/form-templates/$formTemplateId_/edit-translation/$languageCode": {
      "filePath": "form-templates/$formTemplateId_.edit-translation.$languageCode.tsx"
    },
    "/forms/$formId_/edit-translation/$languageCode": {
      "filePath": "forms/$formId_.edit-translation.$languageCode.tsx"
    },
    "/monitoring-observers/push-messages/$id_/view": {
      "filePath": "monitoring-observers/push-messages.$id_.view.tsx"
    },
    "/monitoring-observers/view/$monitoringObserverId/$tab": {
      "filePath": "monitoring-observers/view/$monitoringObserverId.$tab.tsx"
    },
    "/responses/citizen-reports/$formId/aggregated": {
      "filePath": "responses/citizen-reports/$formId.aggregated.tsx"
    },
    "/responses/form-submissions/$formId/aggregated": {
      "filePath": "responses/form-submissions/$formId.aggregated.tsx"
    },
    "/responses/incident-reports/$formId/aggregated": {
      "filePath": "responses/incident-reports/$formId.aggregated.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
