/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TypographyRouteImport } from './routes/typography'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as authSuccessRouteImport } from './routes/(auth)/success'
import { Route as authSetPasswordRouteImport } from './routes/(auth)/set-password'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as authAcceptInviteRouteImport } from './routes/(auth)/accept-invite'
import { Route as appSettingsRouteImport } from './routes/(app)/settings'
import { Route as appElectionsIndexRouteImport } from './routes/(app)/elections/index'
import { Route as appElectionsElectionRoundIdRouteRouteImport } from './routes/(app)/elections/$electionRoundId/route'
import { Route as appElectionsElectionRoundIdIndexRouteImport } from './routes/(app)/elections/$electionRoundId/index'
import { Route as appElectionsElectionRoundIdSubmissionsRouteRouteImport } from './routes/(app)/elections/$electionRoundId/submissions/route'
import { Route as appElectionsElectionRoundIdSubmissionsIndexRouteImport } from './routes/(app)/elections/$electionRoundId/submissions/index'
import { Route as appElectionsElectionRoundIdQuickReportsIndexRouteImport } from './routes/(app)/elections/$electionRoundId/quick-reports/index'
import { Route as appElectionsElectionRoundIdPushMessagesIndexRouteImport } from './routes/(app)/elections/$electionRoundId/push-messages/index'
import { Route as appElectionsElectionRoundIdObserversIndexRouteImport } from './routes/(app)/elections/$electionRoundId/observers/index'
import { Route as appElectionsElectionRoundIdIncidentsIndexRouteImport } from './routes/(app)/elections/$electionRoundId/incidents/index'
import { Route as appElectionsElectionRoundIdGuidesIndexRouteImport } from './routes/(app)/elections/$electionRoundId/guides/index'
import { Route as appElectionsElectionRoundIdFormsIndexRouteImport } from './routes/(app)/elections/$electionRoundId/forms/index'
import { Route as appElectionsElectionRoundIdSubmissionsByFormRouteImport } from './routes/(app)/elections/$electionRoundId/submissions/by-form'
import { Route as appElectionsElectionRoundIdQuickReportsQuickReportIdRouteImport } from './routes/(app)/elections/$electionRoundId/quick-reports/$quickReportId'
import { Route as appElectionsElectionRoundIdPushMessagesPushMessageIdRouteImport } from './routes/(app)/elections/$electionRoundId/push-messages/$pushMessageId'
import { Route as appElectionsElectionRoundIdObserversObserverIdRouteImport } from './routes/(app)/elections/$electionRoundId/observers/$observerId'
import { Route as appElectionsElectionRoundIdIncidentsIncidentIdRouteImport } from './routes/(app)/elections/$electionRoundId/incidents/$incidentId'
import { Route as appElectionsElectionRoundIdGuidesGuideIdRouteImport } from './routes/(app)/elections/$electionRoundId/guides/$guideId'
import { Route as appElectionsElectionRoundIdFormsFormIdRouteImport } from './routes/(app)/elections/$electionRoundId/forms/$formId'
import { Route as appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRouteImport } from './routes/(app)/elections/$electionRoundId/submissions/$submissionId/index'

const TypographyRoute = TypographyRouteImport.update({
  id: '/typography',
  path: '/typography',
  getParentRoute: () => rootRouteImport,
} as any)
const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)
const authSuccessRoute = authSuccessRouteImport.update({
  id: '/(auth)/success',
  path: '/success',
  getParentRoute: () => rootRouteImport,
} as any)
const authSetPasswordRoute = authSetPasswordRouteImport.update({
  id: '/(auth)/set-password',
  path: '/set-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authAcceptInviteRoute = authAcceptInviteRouteImport.update({
  id: '/(auth)/accept-invite',
  path: '/accept-invite',
  getParentRoute: () => rootRouteImport,
} as any)
const appSettingsRoute = appSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => appRouteRoute,
} as any)
const appElectionsIndexRoute = appElectionsIndexRouteImport.update({
  id: '/elections/',
  path: '/elections/',
  getParentRoute: () => appRouteRoute,
} as any)
const appElectionsElectionRoundIdRouteRoute =
  appElectionsElectionRoundIdRouteRouteImport.update({
    id: '/elections/$electionRoundId',
    path: '/elections/$electionRoundId',
    getParentRoute: () => appRouteRoute,
  } as any)
const appElectionsElectionRoundIdIndexRoute =
  appElectionsElectionRoundIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdSubmissionsRouteRoute =
  appElectionsElectionRoundIdSubmissionsRouteRouteImport.update({
    id: '/submissions',
    path: '/submissions',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdSubmissionsIndexRoute =
  appElectionsElectionRoundIdSubmissionsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => appElectionsElectionRoundIdSubmissionsRouteRoute,
  } as any)
const appElectionsElectionRoundIdQuickReportsIndexRoute =
  appElectionsElectionRoundIdQuickReportsIndexRouteImport.update({
    id: '/quick-reports/',
    path: '/quick-reports/',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdPushMessagesIndexRoute =
  appElectionsElectionRoundIdPushMessagesIndexRouteImport.update({
    id: '/push-messages/',
    path: '/push-messages/',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdObserversIndexRoute =
  appElectionsElectionRoundIdObserversIndexRouteImport.update({
    id: '/observers/',
    path: '/observers/',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdIncidentsIndexRoute =
  appElectionsElectionRoundIdIncidentsIndexRouteImport.update({
    id: '/incidents/',
    path: '/incidents/',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdGuidesIndexRoute =
  appElectionsElectionRoundIdGuidesIndexRouteImport.update({
    id: '/guides/',
    path: '/guides/',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdFormsIndexRoute =
  appElectionsElectionRoundIdFormsIndexRouteImport.update({
    id: '/forms/',
    path: '/forms/',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdSubmissionsByFormRoute =
  appElectionsElectionRoundIdSubmissionsByFormRouteImport.update({
    id: '/by-form',
    path: '/by-form',
    getParentRoute: () => appElectionsElectionRoundIdSubmissionsRouteRoute,
  } as any)
const appElectionsElectionRoundIdQuickReportsQuickReportIdRoute =
  appElectionsElectionRoundIdQuickReportsQuickReportIdRouteImport.update({
    id: '/quick-reports/$quickReportId',
    path: '/quick-reports/$quickReportId',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdPushMessagesPushMessageIdRoute =
  appElectionsElectionRoundIdPushMessagesPushMessageIdRouteImport.update({
    id: '/push-messages/$pushMessageId',
    path: '/push-messages/$pushMessageId',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdObserversObserverIdRoute =
  appElectionsElectionRoundIdObserversObserverIdRouteImport.update({
    id: '/observers/$observerId',
    path: '/observers/$observerId',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdIncidentsIncidentIdRoute =
  appElectionsElectionRoundIdIncidentsIncidentIdRouteImport.update({
    id: '/incidents/$incidentId',
    path: '/incidents/$incidentId',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdGuidesGuideIdRoute =
  appElectionsElectionRoundIdGuidesGuideIdRouteImport.update({
    id: '/guides/$guideId',
    path: '/guides/$guideId',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdFormsFormIdRoute =
  appElectionsElectionRoundIdFormsFormIdRouteImport.update({
    id: '/forms/$formId',
    path: '/forms/$formId',
    getParentRoute: () => appElectionsElectionRoundIdRouteRoute,
  } as any)
const appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute =
  appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRouteImport.update({
    id: '/$submissionId/',
    path: '/$submissionId/',
    getParentRoute: () => appElectionsElectionRoundIdSubmissionsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/typography': typeof TypographyRoute
  '/settings': typeof appSettingsRoute
  '/accept-invite': typeof authAcceptInviteRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/set-password': typeof authSetPasswordRoute
  '/success': typeof authSuccessRoute
  '/elections/$electionRoundId': typeof appElectionsElectionRoundIdRouteRouteWithChildren
  '/elections': typeof appElectionsIndexRoute
  '/elections/$electionRoundId/submissions': typeof appElectionsElectionRoundIdSubmissionsRouteRouteWithChildren
  '/elections/$electionRoundId/': typeof appElectionsElectionRoundIdIndexRoute
  '/elections/$electionRoundId/forms/$formId': typeof appElectionsElectionRoundIdFormsFormIdRoute
  '/elections/$electionRoundId/guides/$guideId': typeof appElectionsElectionRoundIdGuidesGuideIdRoute
  '/elections/$electionRoundId/incidents/$incidentId': typeof appElectionsElectionRoundIdIncidentsIncidentIdRoute
  '/elections/$electionRoundId/observers/$observerId': typeof appElectionsElectionRoundIdObserversObserverIdRoute
  '/elections/$electionRoundId/push-messages/$pushMessageId': typeof appElectionsElectionRoundIdPushMessagesPushMessageIdRoute
  '/elections/$electionRoundId/quick-reports/$quickReportId': typeof appElectionsElectionRoundIdQuickReportsQuickReportIdRoute
  '/elections/$electionRoundId/submissions/by-form': typeof appElectionsElectionRoundIdSubmissionsByFormRoute
  '/elections/$electionRoundId/forms': typeof appElectionsElectionRoundIdFormsIndexRoute
  '/elections/$electionRoundId/guides': typeof appElectionsElectionRoundIdGuidesIndexRoute
  '/elections/$electionRoundId/incidents': typeof appElectionsElectionRoundIdIncidentsIndexRoute
  '/elections/$electionRoundId/observers': typeof appElectionsElectionRoundIdObserversIndexRoute
  '/elections/$electionRoundId/push-messages': typeof appElectionsElectionRoundIdPushMessagesIndexRoute
  '/elections/$electionRoundId/quick-reports': typeof appElectionsElectionRoundIdQuickReportsIndexRoute
  '/elections/$electionRoundId/submissions/': typeof appElectionsElectionRoundIdSubmissionsIndexRoute
  '/elections/$electionRoundId/submissions/$submissionId': typeof appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute
}
export interface FileRoutesByTo {
  '/typography': typeof TypographyRoute
  '/settings': typeof appSettingsRoute
  '/accept-invite': typeof authAcceptInviteRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/set-password': typeof authSetPasswordRoute
  '/success': typeof authSuccessRoute
  '/': typeof appIndexRoute
  '/elections': typeof appElectionsIndexRoute
  '/elections/$electionRoundId': typeof appElectionsElectionRoundIdIndexRoute
  '/elections/$electionRoundId/forms/$formId': typeof appElectionsElectionRoundIdFormsFormIdRoute
  '/elections/$electionRoundId/guides/$guideId': typeof appElectionsElectionRoundIdGuidesGuideIdRoute
  '/elections/$electionRoundId/incidents/$incidentId': typeof appElectionsElectionRoundIdIncidentsIncidentIdRoute
  '/elections/$electionRoundId/observers/$observerId': typeof appElectionsElectionRoundIdObserversObserverIdRoute
  '/elections/$electionRoundId/push-messages/$pushMessageId': typeof appElectionsElectionRoundIdPushMessagesPushMessageIdRoute
  '/elections/$electionRoundId/quick-reports/$quickReportId': typeof appElectionsElectionRoundIdQuickReportsQuickReportIdRoute
  '/elections/$electionRoundId/submissions/by-form': typeof appElectionsElectionRoundIdSubmissionsByFormRoute
  '/elections/$electionRoundId/forms': typeof appElectionsElectionRoundIdFormsIndexRoute
  '/elections/$electionRoundId/guides': typeof appElectionsElectionRoundIdGuidesIndexRoute
  '/elections/$electionRoundId/incidents': typeof appElectionsElectionRoundIdIncidentsIndexRoute
  '/elections/$electionRoundId/observers': typeof appElectionsElectionRoundIdObserversIndexRoute
  '/elections/$electionRoundId/push-messages': typeof appElectionsElectionRoundIdPushMessagesIndexRoute
  '/elections/$electionRoundId/quick-reports': typeof appElectionsElectionRoundIdQuickReportsIndexRoute
  '/elections/$electionRoundId/submissions': typeof appElectionsElectionRoundIdSubmissionsIndexRoute
  '/elections/$electionRoundId/submissions/$submissionId': typeof appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/typography': typeof TypographyRoute
  '/(app)/settings': typeof appSettingsRoute
  '/(auth)/accept-invite': typeof authAcceptInviteRoute
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/set-password': typeof authSetPasswordRoute
  '/(auth)/success': typeof authSuccessRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/elections/$electionRoundId': typeof appElectionsElectionRoundIdRouteRouteWithChildren
  '/(app)/elections/': typeof appElectionsIndexRoute
  '/(app)/elections/$electionRoundId/submissions': typeof appElectionsElectionRoundIdSubmissionsRouteRouteWithChildren
  '/(app)/elections/$electionRoundId/': typeof appElectionsElectionRoundIdIndexRoute
  '/(app)/elections/$electionRoundId/forms/$formId': typeof appElectionsElectionRoundIdFormsFormIdRoute
  '/(app)/elections/$electionRoundId/guides/$guideId': typeof appElectionsElectionRoundIdGuidesGuideIdRoute
  '/(app)/elections/$electionRoundId/incidents/$incidentId': typeof appElectionsElectionRoundIdIncidentsIncidentIdRoute
  '/(app)/elections/$electionRoundId/observers/$observerId': typeof appElectionsElectionRoundIdObserversObserverIdRoute
  '/(app)/elections/$electionRoundId/push-messages/$pushMessageId': typeof appElectionsElectionRoundIdPushMessagesPushMessageIdRoute
  '/(app)/elections/$electionRoundId/quick-reports/$quickReportId': typeof appElectionsElectionRoundIdQuickReportsQuickReportIdRoute
  '/(app)/elections/$electionRoundId/submissions/by-form': typeof appElectionsElectionRoundIdSubmissionsByFormRoute
  '/(app)/elections/$electionRoundId/forms/': typeof appElectionsElectionRoundIdFormsIndexRoute
  '/(app)/elections/$electionRoundId/guides/': typeof appElectionsElectionRoundIdGuidesIndexRoute
  '/(app)/elections/$electionRoundId/incidents/': typeof appElectionsElectionRoundIdIncidentsIndexRoute
  '/(app)/elections/$electionRoundId/observers/': typeof appElectionsElectionRoundIdObserversIndexRoute
  '/(app)/elections/$electionRoundId/push-messages/': typeof appElectionsElectionRoundIdPushMessagesIndexRoute
  '/(app)/elections/$electionRoundId/quick-reports/': typeof appElectionsElectionRoundIdQuickReportsIndexRoute
  '/(app)/elections/$electionRoundId/submissions/': typeof appElectionsElectionRoundIdSubmissionsIndexRoute
  '/(app)/elections/$electionRoundId/submissions/$submissionId/': typeof appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/typography'
    | '/settings'
    | '/accept-invite'
    | '/forgot-password'
    | '/login'
    | '/set-password'
    | '/success'
    | '/elections/$electionRoundId'
    | '/elections'
    | '/elections/$electionRoundId/submissions'
    | '/elections/$electionRoundId/'
    | '/elections/$electionRoundId/forms/$formId'
    | '/elections/$electionRoundId/guides/$guideId'
    | '/elections/$electionRoundId/incidents/$incidentId'
    | '/elections/$electionRoundId/observers/$observerId'
    | '/elections/$electionRoundId/push-messages/$pushMessageId'
    | '/elections/$electionRoundId/quick-reports/$quickReportId'
    | '/elections/$electionRoundId/submissions/by-form'
    | '/elections/$electionRoundId/forms'
    | '/elections/$electionRoundId/guides'
    | '/elections/$electionRoundId/incidents'
    | '/elections/$electionRoundId/observers'
    | '/elections/$electionRoundId/push-messages'
    | '/elections/$electionRoundId/quick-reports'
    | '/elections/$electionRoundId/submissions/'
    | '/elections/$electionRoundId/submissions/$submissionId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/typography'
    | '/settings'
    | '/accept-invite'
    | '/forgot-password'
    | '/login'
    | '/set-password'
    | '/success'
    | '/'
    | '/elections'
    | '/elections/$electionRoundId'
    | '/elections/$electionRoundId/forms/$formId'
    | '/elections/$electionRoundId/guides/$guideId'
    | '/elections/$electionRoundId/incidents/$incidentId'
    | '/elections/$electionRoundId/observers/$observerId'
    | '/elections/$electionRoundId/push-messages/$pushMessageId'
    | '/elections/$electionRoundId/quick-reports/$quickReportId'
    | '/elections/$electionRoundId/submissions/by-form'
    | '/elections/$electionRoundId/forms'
    | '/elections/$electionRoundId/guides'
    | '/elections/$electionRoundId/incidents'
    | '/elections/$electionRoundId/observers'
    | '/elections/$electionRoundId/push-messages'
    | '/elections/$electionRoundId/quick-reports'
    | '/elections/$electionRoundId/submissions'
    | '/elections/$electionRoundId/submissions/$submissionId'
  id:
    | '__root__'
    | '/(app)'
    | '/typography'
    | '/(app)/settings'
    | '/(auth)/accept-invite'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/set-password'
    | '/(auth)/success'
    | '/(app)/'
    | '/(app)/elections/$electionRoundId'
    | '/(app)/elections/'
    | '/(app)/elections/$electionRoundId/submissions'
    | '/(app)/elections/$electionRoundId/'
    | '/(app)/elections/$electionRoundId/forms/$formId'
    | '/(app)/elections/$electionRoundId/guides/$guideId'
    | '/(app)/elections/$electionRoundId/incidents/$incidentId'
    | '/(app)/elections/$electionRoundId/observers/$observerId'
    | '/(app)/elections/$electionRoundId/push-messages/$pushMessageId'
    | '/(app)/elections/$electionRoundId/quick-reports/$quickReportId'
    | '/(app)/elections/$electionRoundId/submissions/by-form'
    | '/(app)/elections/$electionRoundId/forms/'
    | '/(app)/elections/$electionRoundId/guides/'
    | '/(app)/elections/$electionRoundId/incidents/'
    | '/(app)/elections/$electionRoundId/observers/'
    | '/(app)/elections/$electionRoundId/push-messages/'
    | '/(app)/elections/$electionRoundId/quick-reports/'
    | '/(app)/elections/$electionRoundId/submissions/'
    | '/(app)/elections/$electionRoundId/submissions/$submissionId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  TypographyRoute: typeof TypographyRoute
  authAcceptInviteRoute: typeof authAcceptInviteRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authSetPasswordRoute: typeof authSetPasswordRoute
  authSuccessRoute: typeof authSuccessRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/typography': {
      id: '/typography'
      path: '/typography'
      fullPath: '/typography'
      preLoaderRoute: typeof TypographyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(auth)/success': {
      id: '/(auth)/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof authSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/set-password': {
      id: '/(auth)/set-password'
      path: '/set-password'
      fullPath: '/set-password'
      preLoaderRoute: typeof authSetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/accept-invite': {
      id: '/(auth)/accept-invite'
      path: '/accept-invite'
      fullPath: '/accept-invite'
      preLoaderRoute: typeof authAcceptInviteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/settings': {
      id: '/(app)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/elections/': {
      id: '/(app)/elections/'
      path: '/elections'
      fullPath: '/elections'
      preLoaderRoute: typeof appElectionsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/elections/$electionRoundId': {
      id: '/(app)/elections/$electionRoundId'
      path: '/elections/$electionRoundId'
      fullPath: '/elections/$electionRoundId'
      preLoaderRoute: typeof appElectionsElectionRoundIdRouteRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/elections/$electionRoundId/': {
      id: '/(app)/elections/$electionRoundId/'
      path: '/'
      fullPath: '/elections/$electionRoundId/'
      preLoaderRoute: typeof appElectionsElectionRoundIdIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/submissions': {
      id: '/(app)/elections/$electionRoundId/submissions'
      path: '/submissions'
      fullPath: '/elections/$electionRoundId/submissions'
      preLoaderRoute: typeof appElectionsElectionRoundIdSubmissionsRouteRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/submissions/': {
      id: '/(app)/elections/$electionRoundId/submissions/'
      path: '/'
      fullPath: '/elections/$electionRoundId/submissions/'
      preLoaderRoute: typeof appElectionsElectionRoundIdSubmissionsIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdSubmissionsRouteRoute
    }
    '/(app)/elections/$electionRoundId/quick-reports/': {
      id: '/(app)/elections/$electionRoundId/quick-reports/'
      path: '/quick-reports'
      fullPath: '/elections/$electionRoundId/quick-reports'
      preLoaderRoute: typeof appElectionsElectionRoundIdQuickReportsIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/push-messages/': {
      id: '/(app)/elections/$electionRoundId/push-messages/'
      path: '/push-messages'
      fullPath: '/elections/$electionRoundId/push-messages'
      preLoaderRoute: typeof appElectionsElectionRoundIdPushMessagesIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/observers/': {
      id: '/(app)/elections/$electionRoundId/observers/'
      path: '/observers'
      fullPath: '/elections/$electionRoundId/observers'
      preLoaderRoute: typeof appElectionsElectionRoundIdObserversIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/incidents/': {
      id: '/(app)/elections/$electionRoundId/incidents/'
      path: '/incidents'
      fullPath: '/elections/$electionRoundId/incidents'
      preLoaderRoute: typeof appElectionsElectionRoundIdIncidentsIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/guides/': {
      id: '/(app)/elections/$electionRoundId/guides/'
      path: '/guides'
      fullPath: '/elections/$electionRoundId/guides'
      preLoaderRoute: typeof appElectionsElectionRoundIdGuidesIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/forms/': {
      id: '/(app)/elections/$electionRoundId/forms/'
      path: '/forms'
      fullPath: '/elections/$electionRoundId/forms'
      preLoaderRoute: typeof appElectionsElectionRoundIdFormsIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/submissions/by-form': {
      id: '/(app)/elections/$electionRoundId/submissions/by-form'
      path: '/by-form'
      fullPath: '/elections/$electionRoundId/submissions/by-form'
      preLoaderRoute: typeof appElectionsElectionRoundIdSubmissionsByFormRouteImport
      parentRoute: typeof appElectionsElectionRoundIdSubmissionsRouteRoute
    }
    '/(app)/elections/$electionRoundId/quick-reports/$quickReportId': {
      id: '/(app)/elections/$electionRoundId/quick-reports/$quickReportId'
      path: '/quick-reports/$quickReportId'
      fullPath: '/elections/$electionRoundId/quick-reports/$quickReportId'
      preLoaderRoute: typeof appElectionsElectionRoundIdQuickReportsQuickReportIdRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/push-messages/$pushMessageId': {
      id: '/(app)/elections/$electionRoundId/push-messages/$pushMessageId'
      path: '/push-messages/$pushMessageId'
      fullPath: '/elections/$electionRoundId/push-messages/$pushMessageId'
      preLoaderRoute: typeof appElectionsElectionRoundIdPushMessagesPushMessageIdRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/observers/$observerId': {
      id: '/(app)/elections/$electionRoundId/observers/$observerId'
      path: '/observers/$observerId'
      fullPath: '/elections/$electionRoundId/observers/$observerId'
      preLoaderRoute: typeof appElectionsElectionRoundIdObserversObserverIdRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/incidents/$incidentId': {
      id: '/(app)/elections/$electionRoundId/incidents/$incidentId'
      path: '/incidents/$incidentId'
      fullPath: '/elections/$electionRoundId/incidents/$incidentId'
      preLoaderRoute: typeof appElectionsElectionRoundIdIncidentsIncidentIdRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/guides/$guideId': {
      id: '/(app)/elections/$electionRoundId/guides/$guideId'
      path: '/guides/$guideId'
      fullPath: '/elections/$electionRoundId/guides/$guideId'
      preLoaderRoute: typeof appElectionsElectionRoundIdGuidesGuideIdRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/forms/$formId': {
      id: '/(app)/elections/$electionRoundId/forms/$formId'
      path: '/forms/$formId'
      fullPath: '/elections/$electionRoundId/forms/$formId'
      preLoaderRoute: typeof appElectionsElectionRoundIdFormsFormIdRouteImport
      parentRoute: typeof appElectionsElectionRoundIdRouteRoute
    }
    '/(app)/elections/$electionRoundId/submissions/$submissionId/': {
      id: '/(app)/elections/$electionRoundId/submissions/$submissionId/'
      path: '/$submissionId'
      fullPath: '/elections/$electionRoundId/submissions/$submissionId'
      preLoaderRoute: typeof appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRouteImport
      parentRoute: typeof appElectionsElectionRoundIdSubmissionsRouteRoute
    }
  }
}

interface appElectionsElectionRoundIdSubmissionsRouteRouteChildren {
  appElectionsElectionRoundIdSubmissionsByFormRoute: typeof appElectionsElectionRoundIdSubmissionsByFormRoute
  appElectionsElectionRoundIdSubmissionsIndexRoute: typeof appElectionsElectionRoundIdSubmissionsIndexRoute
  appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute: typeof appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute
}

const appElectionsElectionRoundIdSubmissionsRouteRouteChildren: appElectionsElectionRoundIdSubmissionsRouteRouteChildren =
  {
    appElectionsElectionRoundIdSubmissionsByFormRoute:
      appElectionsElectionRoundIdSubmissionsByFormRoute,
    appElectionsElectionRoundIdSubmissionsIndexRoute:
      appElectionsElectionRoundIdSubmissionsIndexRoute,
    appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute:
      appElectionsElectionRoundIdSubmissionsSubmissionIdIndexRoute,
  }

const appElectionsElectionRoundIdSubmissionsRouteRouteWithChildren =
  appElectionsElectionRoundIdSubmissionsRouteRoute._addFileChildren(
    appElectionsElectionRoundIdSubmissionsRouteRouteChildren,
  )

interface appElectionsElectionRoundIdRouteRouteChildren {
  appElectionsElectionRoundIdSubmissionsRouteRoute: typeof appElectionsElectionRoundIdSubmissionsRouteRouteWithChildren
  appElectionsElectionRoundIdIndexRoute: typeof appElectionsElectionRoundIdIndexRoute
  appElectionsElectionRoundIdFormsFormIdRoute: typeof appElectionsElectionRoundIdFormsFormIdRoute
  appElectionsElectionRoundIdGuidesGuideIdRoute: typeof appElectionsElectionRoundIdGuidesGuideIdRoute
  appElectionsElectionRoundIdIncidentsIncidentIdRoute: typeof appElectionsElectionRoundIdIncidentsIncidentIdRoute
  appElectionsElectionRoundIdObserversObserverIdRoute: typeof appElectionsElectionRoundIdObserversObserverIdRoute
  appElectionsElectionRoundIdPushMessagesPushMessageIdRoute: typeof appElectionsElectionRoundIdPushMessagesPushMessageIdRoute
  appElectionsElectionRoundIdQuickReportsQuickReportIdRoute: typeof appElectionsElectionRoundIdQuickReportsQuickReportIdRoute
  appElectionsElectionRoundIdFormsIndexRoute: typeof appElectionsElectionRoundIdFormsIndexRoute
  appElectionsElectionRoundIdGuidesIndexRoute: typeof appElectionsElectionRoundIdGuidesIndexRoute
  appElectionsElectionRoundIdIncidentsIndexRoute: typeof appElectionsElectionRoundIdIncidentsIndexRoute
  appElectionsElectionRoundIdObserversIndexRoute: typeof appElectionsElectionRoundIdObserversIndexRoute
  appElectionsElectionRoundIdPushMessagesIndexRoute: typeof appElectionsElectionRoundIdPushMessagesIndexRoute
  appElectionsElectionRoundIdQuickReportsIndexRoute: typeof appElectionsElectionRoundIdQuickReportsIndexRoute
}

const appElectionsElectionRoundIdRouteRouteChildren: appElectionsElectionRoundIdRouteRouteChildren =
  {
    appElectionsElectionRoundIdSubmissionsRouteRoute:
      appElectionsElectionRoundIdSubmissionsRouteRouteWithChildren,
    appElectionsElectionRoundIdIndexRoute:
      appElectionsElectionRoundIdIndexRoute,
    appElectionsElectionRoundIdFormsFormIdRoute:
      appElectionsElectionRoundIdFormsFormIdRoute,
    appElectionsElectionRoundIdGuidesGuideIdRoute:
      appElectionsElectionRoundIdGuidesGuideIdRoute,
    appElectionsElectionRoundIdIncidentsIncidentIdRoute:
      appElectionsElectionRoundIdIncidentsIncidentIdRoute,
    appElectionsElectionRoundIdObserversObserverIdRoute:
      appElectionsElectionRoundIdObserversObserverIdRoute,
    appElectionsElectionRoundIdPushMessagesPushMessageIdRoute:
      appElectionsElectionRoundIdPushMessagesPushMessageIdRoute,
    appElectionsElectionRoundIdQuickReportsQuickReportIdRoute:
      appElectionsElectionRoundIdQuickReportsQuickReportIdRoute,
    appElectionsElectionRoundIdFormsIndexRoute:
      appElectionsElectionRoundIdFormsIndexRoute,
    appElectionsElectionRoundIdGuidesIndexRoute:
      appElectionsElectionRoundIdGuidesIndexRoute,
    appElectionsElectionRoundIdIncidentsIndexRoute:
      appElectionsElectionRoundIdIncidentsIndexRoute,
    appElectionsElectionRoundIdObserversIndexRoute:
      appElectionsElectionRoundIdObserversIndexRoute,
    appElectionsElectionRoundIdPushMessagesIndexRoute:
      appElectionsElectionRoundIdPushMessagesIndexRoute,
    appElectionsElectionRoundIdQuickReportsIndexRoute:
      appElectionsElectionRoundIdQuickReportsIndexRoute,
  }

const appElectionsElectionRoundIdRouteRouteWithChildren =
  appElectionsElectionRoundIdRouteRoute._addFileChildren(
    appElectionsElectionRoundIdRouteRouteChildren,
  )

interface appRouteRouteChildren {
  appSettingsRoute: typeof appSettingsRoute
  appIndexRoute: typeof appIndexRoute
  appElectionsElectionRoundIdRouteRoute: typeof appElectionsElectionRoundIdRouteRouteWithChildren
  appElectionsIndexRoute: typeof appElectionsIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appSettingsRoute: appSettingsRoute,
  appIndexRoute: appIndexRoute,
  appElectionsElectionRoundIdRouteRoute:
    appElectionsElectionRoundIdRouteRouteWithChildren,
  appElectionsIndexRoute: appElectionsIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  TypographyRoute: TypographyRoute,
  authAcceptInviteRoute: authAcceptInviteRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authSetPasswordRoute: authSetPasswordRoute,
  authSuccessRoute: authSuccessRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
