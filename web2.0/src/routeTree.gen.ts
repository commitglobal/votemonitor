/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TypographyImport } from './routes/typography'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as HelloIndexImport } from './routes/hello/index'
import { Route as HelloNameImport } from './routes/hello/$name'

// Create/Update Routes

const TypographyRoute = TypographyImport.update({
  id: '/typography',
  path: '/typography',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HelloIndexRoute = HelloIndexImport.update({
  id: '/hello/',
  path: '/hello/',
  getParentRoute: () => rootRoute,
} as any)

const HelloNameRoute = HelloNameImport.update({
  id: '/hello/$name',
  path: '/hello/$name',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/typography': {
      id: '/typography'
      path: '/typography'
      fullPath: '/typography'
      preLoaderRoute: typeof TypographyImport
      parentRoute: typeof rootRoute
    }
    '/hello/$name': {
      id: '/hello/$name'
      path: '/hello/$name'
      fullPath: '/hello/$name'
      preLoaderRoute: typeof HelloNameImport
      parentRoute: typeof rootRoute
    }
    '/hello/': {
      id: '/hello/'
      path: '/hello'
      fullPath: '/hello'
      preLoaderRoute: typeof HelloIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/typography': typeof TypographyRoute
  '/hello/$name': typeof HelloNameRoute
  '/hello': typeof HelloIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/typography': typeof TypographyRoute
  '/hello/$name': typeof HelloNameRoute
  '/hello': typeof HelloIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/typography': typeof TypographyRoute
  '/hello/$name': typeof HelloNameRoute
  '/hello/': typeof HelloIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/typography' | '/hello/$name' | '/hello'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/typography' | '/hello/$name' | '/hello'
  id: '__root__' | '/' | '/about' | '/typography' | '/hello/$name' | '/hello/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  TypographyRoute: typeof TypographyRoute
  HelloNameRoute: typeof HelloNameRoute
  HelloIndexRoute: typeof HelloIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  TypographyRoute: TypographyRoute,
  HelloNameRoute: HelloNameRoute,
  HelloIndexRoute: HelloIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/typography",
        "/hello/$name",
        "/hello/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/typography": {
      "filePath": "typography.tsx"
    },
    "/hello/$name": {
      "filePath": "hello/$name.tsx"
    },
    "/hello/": {
      "filePath": "hello/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
